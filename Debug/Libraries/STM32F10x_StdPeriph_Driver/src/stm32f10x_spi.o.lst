   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_spi.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c"
 18782              		.align	1
 18783              		.global	SPI_I2S_DeInit
 18784              		.thumb
 18785              		.thumb_func
 18787              	SPI_I2S_DeInit:
 18788              	.LFB29:
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @file    stm32f10x_spi.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief   This file provides all the SPI firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_spi.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #include "stm32f10x_rcc.h"
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI 
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief SPI driver modules
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_TypesDefinitions
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */ 
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Defines
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SPE mask */
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Set          ((uint16_t)0x0040)
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_SPE_Reset        ((uint16_t)0xFFBF)
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S I2SE mask */
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Set     ((uint16_t)0x0400)
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_I2SE_Reset   ((uint16_t)0xFBFF)
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCNext mask */
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCNext_Set      ((uint16_t)0x1000)
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI CRCEN mask */
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Set        ((uint16_t)0x2000)
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CRCEN_Reset      ((uint16_t)0xDFFF)
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI SSOE mask */
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Set         ((uint16_t)0x0004)
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR2_SSOE_Reset       ((uint16_t)0xFFFB)
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI registers Masks */
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define CR1_CLEAR_Mask       ((uint16_t)0x3040)
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2SCFGR_CLEAR_Mask   ((uint16_t)0xF040)
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* SPI or I2S mode selection masks */
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define SPI_Mode_Select      ((uint16_t)0xF7FF)
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_Mode_Select      ((uint16_t)0x0800) 
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /* I2S clock source selection masks */
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S2_CLOCK_SRC       ((uint32_t)(0x00020000))
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S3_CLOCK_SRC       ((uint32_t)(0x00040000))
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_MUL_MASK         ((uint32_t)(0x0000F000))
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #define I2S_DIV_MASK         ((uint32_t)(0x000000F0))
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Macros
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Variables
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_FunctionPrototypes
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @}
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /** @defgroup SPI_Private_Functions
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @{
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Deinitializes the SPIx peripheral registers to their default
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         reset values (Affects also the I2Ss).
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DeInit(SPI_TypeDef* SPIx)
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18789              		.loc 1 120 0
 18790              		.cfi_startproc
 18791              		@ args = 0, pretend = 0, frame = 0
 18792              		@ frame_needed = 0, uses_anonymous_args = 0
 18793              	.LVL0:
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPIx == SPI1)
 18794              		.loc 1 124 0
 18795 0000 154B     		ldr	r3, .L6
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18796              		.loc 1 120 0
 18797 0002 10B5     		push	{r4, lr}
 18798              	.LCFI0:
 18799              		.cfi_def_cfa_offset 8
 18800              		.loc 1 124 0
 18801 0004 9842     		cmp	r0, r3
 18802 0006 0BD1     		bne	.L2
 18803              		.cfi_offset 14, -4
 18804              		.cfi_offset 4, -8
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI1 reset state */
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, ENABLE);
 18805              		.loc 1 127 0
 18806 0008 0121     		movs	r1, #1
 18807 000a 4FF48050 		mov	r0, #4096
 18808              	.LVL1:
 18809 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI1 from reset state */
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 18810              		.loc 1 129 0
 18811 0012 4FF48050 		mov	r0, #4096
 18812 0016 0021     		movs	r1, #0
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else if (SPIx == SPI2)
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable SPI2 reset state */
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Release SPI2 from reset state */
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if (SPIx == SPI3)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Enable SPI3 reset state */
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Release SPI3 from reset state */
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 18813              		.loc 1 148 0
 18814 0018 BDE81040 		pop	{r4, lr}
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_SPI1, DISABLE);
 18815              		.loc 1 129 0
 18816 001c FFF7FEBF 		b	RCC_APB2PeriphResetCmd
 18817              	.LVL2:
 18818              	.L2:
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else if (SPIx == SPI2)
 18819              		.loc 1 131 0
 18820 0020 0E4B     		ldr	r3, .L6+4
 18821 0022 9842     		cmp	r0, r3
 18822 0024 07D1     		bne	.L3
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, ENABLE);
 18823              		.loc 1 134 0
 18824 0026 4FF48040 		mov	r0, #16384
 18825              	.LVL3:
 18826 002a 0121     		movs	r1, #1
 18827 002c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI2, DISABLE);
 18828              		.loc 1 136 0
 18829 0030 4FF48040 		mov	r0, #16384
 18830 0034 09E0     		b	.L5
 18831              	.LVL4:
 18832              	.L3:
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if (SPIx == SPI3)
 18833              		.loc 1 140 0
 18834 0036 0A4B     		ldr	r3, .L6+8
 18835 0038 9842     		cmp	r0, r3
 18836 003a 0BD1     		bne	.L1
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, ENABLE);
 18837              		.loc 1 143 0
 18838 003c 4FF40040 		mov	r0, #32768
 18839              	.LVL5:
 18840 0040 0121     		movs	r1, #1
 18841 0042 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 18842              		.loc 1 145 0
 18843 0046 4FF40040 		mov	r0, #32768
 18844              	.L5:
 18845 004a 0021     		movs	r1, #0
 18846              		.loc 1 148 0
 18847 004c BDE81040 		pop	{r4, lr}
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_SPI3, DISABLE);
 18848              		.loc 1 145 0
 18849 0050 FFF7FEBF 		b	RCC_APB1PeriphResetCmd
 18850              	.LVL6:
 18851              	.L1:
 18852 0054 10BD     		pop	{r4, pc}
 18853              	.L7:
 18854 0056 00BF     		.align	2
 18855              	.L6:
 18856 0058 00300140 		.word	1073819648
 18857 005c 00380040 		.word	1073756160
 18858 0060 003C0040 		.word	1073757184
 18859              		.cfi_endproc
 18860              	.LFE29:
 18862              		.section	.text.SPI_Init,"ax",%progbits
 18863              		.align	1
 18864              		.global	SPI_Init
 18865              		.thumb
 18866              		.thumb_func
 18868              	SPI_Init:
 18869              	.LFB30:
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the SPI_InitStruct.
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct: pointer to a SPI_InitTypeDef structure that
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral.
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Init(SPI_TypeDef* SPIx, SPI_InitTypeDef* SPI_InitStruct)
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18870              		.loc 1 159 0
 18871              		.cfi_startproc
 18872              		@ args = 0, pretend = 0, frame = 0
 18873              		@ frame_needed = 0, uses_anonymous_args = 0
 18874              	.LVL7:
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0;
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* check the parameters */
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));   
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the SPI parameters */
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION_MODE(SPI_InitStruct->SPI_Direction));
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_MODE(SPI_InitStruct->SPI_Mode));
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_InitStruct->SPI_DataSize));
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPOL(SPI_InitStruct->SPI_CPOL));
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CPHA(SPI_InitStruct->SPI_CPHA));
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS(SPI_InitStruct->SPI_NSS));
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_BAUDRATE_PRESCALER(SPI_InitStruct->SPI_BaudRatePrescaler));
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_FIRST_BIT(SPI_InitStruct->SPI_FirstBit));
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC_POLYNOMIAL(SPI_InitStruct->SPI_CRCPolynomial));
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CR1 Configuration ------------------------*/
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPIx CR1 value */
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->CR1;
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear BIDIMode, BIDIOE, RxONLY, SSM, SSI, LSBFirst, BR, MSTR, CPOL and CPHA bits */
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg &= CR1_CLEAR_Mask;
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****      master/salve mode, CPOL and CPHA */
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BIDImode, BIDIOE and RxONLY bits according to SPI_Direction value */
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set SSM, SSI and MSTR bits according to SPI_Mode and SPI_NSS values */
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set LSBFirst bit according to SPI_FirstBit value */
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set BR bits according to SPI_BaudRatePrescaler value */
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPOL bit according to SPI_CPOL value */
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set CPHA bit according to SPI_CPHA value */
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)((uint32_t)SPI_InitStruct->SPI_Direction | SPI_InitStruct->SPI_Mode |
 18875              		.loc 1 189 0
 18876 0000 0B88     		ldrh	r3, [r1, #0]
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18877              		.loc 1 159 0
 18878 0002 10B5     		push	{r4, lr}
 18879              	.LCFI1:
 18880              		.cfi_def_cfa_offset 8
 18881              		.loc 1 189 0
 18882 0004 4C88     		ldrh	r4, [r1, #2]
 18883              		.cfi_offset 14, -4
 18884              		.cfi_offset 4, -8
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->CR1;
 18885              		.loc 1 178 0
 18886 0006 0288     		ldrh	r2, [r0, #0]
 18887              	.LVL8:
 18888              		.loc 1 189 0
 18889 0008 44EA0303 		orr	r3, r4, r3
 18890 000c 8C88     		ldrh	r4, [r1, #4]
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg &= CR1_CLEAR_Mask;
 18891              		.loc 1 180 0
 18892 000e 02F44152 		and	r2, r2, #12352
 18893              	.LVL9:
 18894              		.loc 1 189 0
 18895 0012 2343     		orrs	r3, r3, r4
 18896 0014 CC88     		ldrh	r4, [r1, #6]
 18897 0016 2343     		orrs	r3, r3, r4
 18898 0018 0C89     		ldrh	r4, [r1, #8]
 18899 001a 2343     		orrs	r3, r3, r4
 18900 001c 4C89     		ldrh	r4, [r1, #10]
 18901 001e 2343     		orrs	r3, r3, r4
 18902 0020 8C89     		ldrh	r4, [r1, #12]
 18903 0022 2343     		orrs	r3, r3, r4
 18904 0024 CC89     		ldrh	r4, [r1, #14]
 18905 0026 2343     		orrs	r3, r3, r4
 18906 0028 42EA0303 		orr	r3, r2, r3
 18907              	.LVL10:
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_DataSize | SPI_InitStruct->SPI_CPOL |  
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_CPHA | SPI_InitStruct->SPI_NSS |  
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   SPI_InitStruct->SPI_BaudRatePrescaler | SPI_InitStruct->SPI_FirstBit);
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CR1 */
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 = tmpreg;
 18908              		.loc 1 194 0
 18909 002c 0380     		strh	r3, [r0, #0]	@ movhi
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Activate the SPI mode (Reset I2SMOD bit in I2SCFGR register) */
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= SPI_Mode_Select;		
 18910              		.loc 1 197 0
 18911 002e 838B     		ldrh	r3, [r0, #28]
 18912              	.LVL11:
 18913 0030 23F40063 		bic	r3, r3, #2048
 18914 0034 1B04     		lsls	r3, r3, #16
 18915 0036 1B0C     		lsrs	r3, r3, #16
 18916 0038 8383     		strh	r3, [r0, #28]	@ movhi
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*---------------------------- SPIx CRCPOLY Configuration --------------------*/
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx CRCPOLY */
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CRCPR = SPI_InitStruct->SPI_CRCPolynomial;
 18917              		.loc 1 201 0
 18918 003a 0B8A     		ldrh	r3, [r1, #16]
 18919 003c 0382     		strh	r3, [r0, #16]	@ movhi
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 18920              		.loc 1 202 0
 18921 003e 10BD     		pop	{r4, pc}
 18922              		.cfi_endproc
 18923              	.LFE30:
 18925              		.section	.text.I2S_Init,"ax",%progbits
 18926              		.align	1
 18927              		.global	I2S_Init
 18928              		.thumb
 18929              		.thumb_func
 18931              	I2S_Init:
 18932              	.LFB31:
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Initializes the SPIx peripheral according to the specified 
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         parameters in the I2S_InitStruct.
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be  2 or 3 to select the SPI peripheral
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         (configured in I2S mode).
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct: pointer to an I2S_InitTypeDef structure that
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         contains the configuration information for the specified SPI peripheral
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *         configured in I2S mode.
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  The function calculates the optimal prescaler needed to obtain the most 
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  accurate audio frequency (depending on the I2S clock source, the PLL values 
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  and the product configuration). But in case the prescaler value is greater 
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *  than 511, the default value (0x02) will be configured instead.  *   
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Init(SPI_TypeDef* SPIx, I2S_InitTypeDef* I2S_InitStruct)
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18933              		.loc 1 220 0
 18934              		.cfi_startproc
 18935              		@ args = 0, pretend = 0, frame = 24
 18936              		@ frame_needed = 0, uses_anonymous_args = 0
 18937              	.LVL12:
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t tmpreg = 0, i2sdiv = 2, i2sodd = 0, packetlength = 1;
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t tmp = 0;
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   RCC_ClocksTypeDef RCC_Clocks;
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint32_t sourceclock = 0;
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the I2S parameters */
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MODE(I2S_InitStruct->I2S_Mode));
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_STANDARD(I2S_InitStruct->I2S_Standard));
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_DATA_FORMAT(I2S_InitStruct->I2S_DataFormat));
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_MCLK_OUTPUT(I2S_InitStruct->I2S_MCLKOutput));
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_AUDIO_FREQ(I2S_InitStruct->I2S_AudioFreq));
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_I2S_CPOL(I2S_InitStruct->I2S_CPOL));  
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*----------------------- SPIx I2SCFGR & I2SPR Configuration -----------------*/
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear I2SMOD, I2SE, I2SCFG, PCMSYNC, I2SSTD, CKPOL, DATLEN and CHLEN bits */
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR &= I2SCFGR_CLEAR_Mask; 
 18938              		.loc 1 237 0
 18939 0000 838B     		ldrh	r3, [r0, #28]
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18940              		.loc 1 220 0
 18941 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 18942              	.LCFI2:
 18943              		.cfi_def_cfa_offset 20
 18944              		.loc 1 237 0
 18945 0004 23F47A63 		bic	r3, r3, #4000
 18946 0008 23F01F03 		bic	r3, r3, #31
 18947 000c 1B04     		lsls	r3, r3, #16
 18948 000e 1B0C     		lsrs	r3, r3, #16
 18949 0010 8383     		strh	r3, [r0, #28]	@ movhi
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = 0x0002;
 18950              		.loc 1 238 0
 18951 0012 0223     		movs	r3, #2
 18952 0014 0384     		strh	r3, [r0, #32]	@ movhi
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the I2SCFGR register value */
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the default value has to be written, reinitialize i2sdiv and i2sodd*/
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if(I2S_InitStruct->I2S_AudioFreq == I2S_AudioFreq_Default)
 18953              		.loc 1 244 0
 18954 0016 8B68     		ldr	r3, [r1, #8]
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18955              		.loc 1 220 0
 18956 0018 87B0     		sub	sp, sp, #28
 18957              	.LCFI3:
 18958              		.cfi_def_cfa_offset 48
 18959              		.loc 1 244 0
 18960 001a 022B     		cmp	r3, #2
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 18961              		.loc 1 220 0
 18962 001c 0446     		mov	r4, r0
 18963              		.cfi_offset 14, -4
 18964              		.cfi_offset 7, -8
 18965              		.cfi_offset 6, -12
 18966              		.cfi_offset 5, -16
 18967              		.cfi_offset 4, -20
 18968 001e 0D46     		mov	r5, r1
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg = SPIx->I2SCFGR;
 18969              		.loc 1 241 0
 18970 0020 868B     		ldrh	r6, [r0, #28]
 18971              	.LVL13:
 18972              		.loc 1 244 0
 18973 0022 23D0     		beq	.L15
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)0;
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)2;   
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* If the requested audio frequency is not the default, compute the prescaler */
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the frame length (For the Prescaler computing) */
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 16 bits */
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 1;
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Packet length is 32 bits */
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 2;
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the I2S clock source mask depending on the peripheral number */
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(((uint32_t)SPIx) == SPI2_BASE)
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S2 */
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S2_CLOCK_SRC;
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else 
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* The mask is relative to I2S3 */      
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = I2S3_CLOCK_SRC;
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the I2S clock source configuration depending on the Device:
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****        Only Connectivity line devices have the PLL3 VCO clock */
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #ifdef STM32F10X_CL
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if((RCC->CFGR2 & tmp) != 0)
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the configuration bits of RCC PLL3 multiplier */
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint32_t)((RCC->CFGR2 & I2S_MUL_MASK) >> 12);
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the value of the PLL3 multiplier */      
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       if((tmp > 5) && (tmp < 15))
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         /* Multiplier is between 8 and 14 (value 15 is forbidden) */
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         tmp += 2;
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       else
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       {
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         if (tmp == 15)
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         {
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           /* Multiplier is 20 */
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****           tmp = 20;
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****         }
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       }      
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the PREDIV2 value */
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t)(((RCC->CFGR2 & I2S_DIV_MASK) >> 4) + 1);
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Calculate the Source Clock frequency based on PLL3 and PREDIV2 values */
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = (uint32_t) ((HSE_Value / sourceclock) * tmp * 2); 
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* I2S Clock source is System clock: Get System Clock frequency */
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       RCC_GetClocksFreq(&RCC_Clocks);      
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* Get the source clock value: based on System Clock value */
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       sourceclock = RCC_Clocks.SYSCLK_Frequency;
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }        
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #else /* STM32F10X_HD */
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* I2S Clock source is System clock: Get System Clock frequency */
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     RCC_GetClocksFreq(&RCC_Clocks);      
 18974              		.loc 1 314 0
 18975 0024 01A8     		add	r0, sp, #4
 18976              	.LVL14:
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_DataFormat == I2S_DataFormat_16b)
 18977              		.loc 1 253 0
 18978 0026 8F88     		ldrh	r7, [r1, #4]
 18979              		.loc 1 314 0
 18980 0028 FFF7FEFF 		bl	RCC_GetClocksFreq
 18981              	.LVL15:
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the source clock value: based on System Clock value */
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** #endif /* STM32F10X_CL */    
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the Real divider depending on the MCLK output state with a floating point */
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     if(I2S_InitStruct->I2S_MCLKOutput == I2S_MCLKOutput_Enable)
 18982              		.loc 1 321 0
 18983 002c EB88     		ldrh	r3, [r5, #6]
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       packetlength = 1;
 18984              		.loc 1 256 0
 18985 002e 002F     		cmp	r7, #0
 18986 0030 14BF     		ite	ne
 18987 0032 0227     		movne	r7, #2
 18988 0034 0127     		moveq	r7, #1
 18989              	.LVL16:
 18990              		.loc 1 321 0
 18991 0036 B3F5007F 		cmp	r3, #512
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     sourceclock = RCC_Clocks.SYSCLK_Frequency;    
 18992              		.loc 1 317 0
 18993 003a 019A     		ldr	r2, [sp, #4]
 18994              	.LVL17:
 18995 003c 4FF00A03 		mov	r3, #10
 18996              		.loc 1 321 0
 18997 0040 01D1     		bne	.L12
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is enabled */
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / 256) * 10) / I2S_InitStruct->I2S_AudioFreq)) + 5);
 18998              		.loc 1 324 0
 18999 0042 120A     		lsrs	r2, r2, #8
 19000 0044 02E0     		b	.L18
 19001              	.L12:
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     else
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     {
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       /* MCLK output is disabled */
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 19002              		.loc 1 329 0
 19003 0046 7F01     		lsls	r7, r7, #5
 19004              	.LVL18:
 19005 0048 B2FBF7F2 		udiv	r2, r2, r7
 19006              	.L18:
 19007 004c 5343     		muls	r3, r2, r3
 19008 004e A968     		ldr	r1, [r5, #8]
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     }
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Remove the floating point */
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     tmp = tmp / 10;  
 19009              		.loc 1 333 0
 19010 0050 0A22     		movs	r2, #10
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       tmp = (uint16_t)(((((sourceclock / (32 * packetlength)) *10 ) / I2S_InitStruct->I2S_AudioFreq
 19011              		.loc 1 329 0
 19012 0052 B3FBF1F3 		udiv	r3, r3, r1
 19013 0056 0533     		adds	r3, r3, #5
 19014 0058 9BB2     		uxth	r3, r3
 19015              	.LVL19:
 19016              		.loc 1 333 0
 19017 005a B3FBF2F3 		udiv	r3, r3, r2
 19018              	.LVL20:
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****       
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Check the parity of the divider */
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)(tmp & (uint16_t)0x0001);
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Compute the i2sdiv prescaler */
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 19019              		.loc 1 339 0
 19020 005e 03F00102 		and	r2, r3, #1
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****    
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Mask for the Odd bit (SPI_I2SPR[8]) register */
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t) (i2sodd << 8);
 19021              		.loc 1 342 0
 19022 0062 1202     		lsls	r2, r2, #8
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = (uint16_t)((tmp - i2sodd) / 2);
 19023              		.loc 1 339 0
 19024 0064 5B08     		lsrs	r3, r3, #1
 19025              	.LVL21:
 19026 0066 9BB2     		uxth	r3, r3
 19027              	.LVL22:
 19028              		.loc 1 342 0
 19029 0068 92B2     		uxth	r2, r2
 19030              	.LVL23:
 19031 006a 00E0     		b	.L10
 19032              	.LVL24:
 19033              	.L15:
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = (uint16_t)0;
 19034              		.loc 1 246 0
 19035 006c 0022     		movs	r2, #0
 19036              	.LVL25:
 19037              	.L10:
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Test if the divider is 1 or 0 or greater than 0xFF */
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((i2sdiv < 2) || (i2sdiv > 0xFF))
 19038              		.loc 1 346 0
 19039 006e 991E     		subs	r1, r3, #2
 19040 0070 89B2     		uxth	r1, r1
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the default values */
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sdiv = 2;
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = 0;
 19041              		.loc 1 350 0
 19042 0072 FE29     		cmp	r1, #254
 19043 0074 28BF     		it	cs
 19044 0076 0022     		movcs	r2, #0
 19045              	.LVL26:
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SPR register the computed value */
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SPR = (uint16_t)(i2sdiv | (uint16_t)(i2sodd | (uint16_t)I2S_InitStruct->I2S_MCLKOutput));
 19046              		.loc 1 354 0
 19047 0078 E988     		ldrh	r1, [r5, #6]
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     i2sodd = 0;
 19048              		.loc 1 350 0
 19049 007a 28BF     		it	cs
 19050 007c 0223     		movcs	r3, #2
 19051              	.LVL27:
 19052              		.loc 1 354 0
 19053 007e 1343     		orrs	r3, r3, r2
 19054              	.LVL28:
 19055 0080 0B43     		orrs	r3, r3, r1
 19056 0082 2384     		strh	r3, [r4, #32]	@ movhi
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Configure the I2S with the SPI_InitStruct values */
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)(I2S_InitStruct->I2S_Standard | (uint16_t)(I2S_InitStruct->I2S_DataForm
 19057              		.loc 1 358 0
 19058 0084 2B88     		ldrh	r3, [r5, #0]
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 19059              		.loc 1 357 0
 19060 0086 6A88     		ldrh	r2, [r5, #2]
 19061              	.LVL29:
 19062              		.loc 1 358 0
 19063 0088 46EA0303 		orr	r3, r6, r3
 19064 008c 43F40063 		orr	r3, r3, #2048
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   tmpreg |= (uint16_t)(I2S_Mode_Select | (uint16_t)(I2S_InitStruct->I2S_Mode | \
 19065              		.loc 1 357 0
 19066 0090 1343     		orrs	r3, r3, r2
 19067 0092 AA88     		ldrh	r2, [r5, #4]
 19068 0094 1343     		orrs	r3, r3, r2
 19069 0096 AA89     		ldrh	r2, [r5, #12]
 19070 0098 1343     		orrs	r3, r3, r2
 19071              	.LVL30:
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****                   (uint16_t)I2S_InitStruct->I2S_CPOL))));
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****  
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write to SPIx I2SCFGR */  
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->I2SCFGR = tmpreg;   
 19072              		.loc 1 362 0
 19073 009a A383     		strh	r3, [r4, #28]	@ movhi
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19074              		.loc 1 363 0
 19075 009c 07B0     		add	sp, sp, #28
 19076 009e F0BD     		pop	{r4, r5, r6, r7, pc}
 19077              		.cfi_endproc
 19078              	.LFE31:
 19080              		.section	.text.SPI_StructInit,"ax",%progbits
 19081              		.align	1
 19082              		.global	SPI_StructInit
 19083              		.thumb
 19084              		.thumb_func
 19086              	SPI_StructInit:
 19087              	.LFB32:
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each SPI_InitStruct member with its default value.
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_InitStruct : pointer to a SPI_InitTypeDef structure which will be initialized.
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_StructInit(SPI_InitTypeDef* SPI_InitStruct)
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19088              		.loc 1 371 0
 19089              		.cfi_startproc
 19090              		@ args = 0, pretend = 0, frame = 0
 19091              		@ frame_needed = 0, uses_anonymous_args = 0
 19092              		@ link register save eliminated.
 19093              	.LVL31:
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset SPI init structure parameters values -----------------*/
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_Direction member */
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Direction = SPI_Direction_2Lines_FullDuplex;
 19094              		.loc 1 374 0
 19095 0000 0023     		movs	r3, #0
 19096 0002 0380     		strh	r3, [r0, #0]	@ movhi
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_Mode member */
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
 19097              		.loc 1 376 0
 19098 0004 4380     		strh	r3, [r0, #2]	@ movhi
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* initialize the SPI_DataSize member */
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
 19099              		.loc 1 378 0
 19100 0006 8380     		strh	r3, [r0, #4]	@ movhi
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPOL member */
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
 19101              		.loc 1 380 0
 19102 0008 C380     		strh	r3, [r0, #6]	@ movhi
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CPHA member */
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
 19103              		.loc 1 382 0
 19104 000a 0381     		strh	r3, [r0, #8]	@ movhi
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_NSS member */
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_NSS = SPI_NSS_Hard;
 19105              		.loc 1 384 0
 19106 000c 4381     		strh	r3, [r0, #10]	@ movhi
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_BaudRatePrescaler member */
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_2;
 19107              		.loc 1 386 0
 19108 000e 8381     		strh	r3, [r0, #12]	@ movhi
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_FirstBit member */
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_FirstBit = SPI_FirstBit_MSB;
 19109              		.loc 1 388 0
 19110 0010 C381     		strh	r3, [r0, #14]	@ movhi
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the SPI_CRCPolynomial member */
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPI_InitStruct->SPI_CRCPolynomial = 7;
 19111              		.loc 1 390 0
 19112 0012 0723     		movs	r3, #7
 19113 0014 0382     		strh	r3, [r0, #16]	@ movhi
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19114              		.loc 1 391 0
 19115 0016 7047     		bx	lr
 19116              		.cfi_endproc
 19117              	.LFE32:
 19119              		.section	.text.I2S_StructInit,"ax",%progbits
 19120              		.align	1
 19121              		.global	I2S_StructInit
 19122              		.thumb
 19123              		.thumb_func
 19125              	I2S_StructInit:
 19126              	.LFB33:
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Fills each I2S_InitStruct member with its default value.
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  I2S_InitStruct : pointer to a I2S_InitTypeDef structure which will be initialized.
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_StructInit(I2S_InitTypeDef* I2S_InitStruct)
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19127              		.loc 1 399 0
 19128              		.cfi_startproc
 19129              		@ args = 0, pretend = 0, frame = 0
 19130              		@ frame_needed = 0, uses_anonymous_args = 0
 19131              		@ link register save eliminated.
 19132              	.LVL32:
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /*--------------- Reset I2S init structure parameters values -----------------*/
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Mode member */
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 19133              		.loc 1 402 0
 19134 0000 0023     		movs	r3, #0
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_Standard member */
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_DataFormat member */
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_MCLKOutput member */
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_AudioFreq member */
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_AudioFreq = I2S_AudioFreq_Default;
 19135              		.loc 1 414 0
 19136 0002 0222     		movs	r2, #2
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Mode = I2S_Mode_SlaveTx;
 19137              		.loc 1 402 0
 19138 0004 0380     		strh	r3, [r0, #0]	@ movhi
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_Standard = I2S_Standard_Phillips;
 19139              		.loc 1 405 0
 19140 0006 4380     		strh	r3, [r0, #2]	@ movhi
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_DataFormat = I2S_DataFormat_16b;
 19141              		.loc 1 408 0
 19142 0008 8380     		strh	r3, [r0, #4]	@ movhi
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_MCLKOutput = I2S_MCLKOutput_Disable;
 19143              		.loc 1 411 0
 19144 000a C380     		strh	r3, [r0, #6]	@ movhi
 19145              		.loc 1 414 0
 19146 000c 8260     		str	r2, [r0, #8]
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Initialize the I2S_CPOL member */
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   I2S_InitStruct->I2S_CPOL = I2S_CPOL_Low;
 19147              		.loc 1 417 0
 19148 000e 8381     		strh	r3, [r0, #12]	@ movhi
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19149              		.loc 1 418 0
 19150 0010 7047     		bx	lr
 19151              		.cfi_endproc
 19152              	.LFE33:
 19154              		.section	.text.SPI_Cmd,"ax",%progbits
 19155              		.align	1
 19156              		.global	SPI_Cmd
 19157              		.thumb
 19158              		.thumb_func
 19160              	SPI_Cmd:
 19161              	.LFB34:
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral.
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19162              		.loc 1 428 0
 19163              		.cfi_startproc
 19164              		@ args = 0, pretend = 0, frame = 0
 19165              		@ frame_needed = 0, uses_anonymous_args = 0
 19166              		@ link register save eliminated.
 19167              	.LVL33:
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19168              		.loc 1 432 0
 19169 0000 21B1     		cbz	r1, .L22
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral */
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_SPE_Set;
 19170              		.loc 1 435 0
 19171 0002 0388     		ldrh	r3, [r0, #0]
 19172 0004 9BB2     		uxth	r3, r3
 19173 0006 43F04003 		orr	r3, r3, #64
 19174 000a 04E0     		b	.L24
 19175              	.L22:
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral */
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_SPE_Reset;
 19176              		.loc 1 440 0
 19177 000c 0388     		ldrh	r3, [r0, #0]
 19178 000e 23F04003 		bic	r3, r3, #64
 19179 0012 1B04     		lsls	r3, r3, #16
 19180 0014 1B0C     		lsrs	r3, r3, #16
 19181              	.L24:
 19182 0016 0380     		strh	r3, [r0, #0]	@ movhi
 19183 0018 7047     		bx	lr
 19184              		.cfi_endproc
 19185              	.LFE34:
 19187              		.section	.text.I2S_Cmd,"ax",%progbits
 19188              		.align	1
 19189              		.global	I2S_Cmd
 19190              		.thumb
 19191              		.thumb_func
 19193              	I2S_Cmd:
 19194              	.LFB35:
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI peripheral (in I2S mode).
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 2 or 3 to select the SPI peripheral.
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx peripheral. 
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void I2S_Cmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19195              		.loc 1 452 0
 19196              		.cfi_startproc
 19197              		@ args = 0, pretend = 0, frame = 0
 19198              		@ frame_needed = 0, uses_anonymous_args = 0
 19199              		@ link register save eliminated.
 19200              	.LVL34:
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_23_PERIPH(SPIx));
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19201              		.loc 1 456 0
 19202 0000 21B1     		cbz	r1, .L26
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI peripheral (in I2S mode) */
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR |= I2SCFGR_I2SE_Set;
 19203              		.loc 1 459 0
 19204 0002 838B     		ldrh	r3, [r0, #28]
 19205 0004 9BB2     		uxth	r3, r3
 19206 0006 43F48063 		orr	r3, r3, #1024
 19207 000a 04E0     		b	.L28
 19208              	.L26:
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI peripheral (in I2S mode) */
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->I2SCFGR &= I2SCFGR_I2SE_Reset;
 19209              		.loc 1 464 0
 19210 000c 838B     		ldrh	r3, [r0, #28]
 19211 000e 23F48063 		bic	r3, r3, #1024
 19212 0012 1B04     		lsls	r3, r3, #16
 19213 0014 1B0C     		lsrs	r3, r3, #16
 19214              	.L28:
 19215 0016 8383     		strh	r3, [r0, #28]	@ movhi
 19216 0018 7047     		bx	lr
 19217              		.cfi_endproc
 19218              	.LFE35:
 19220              		.section	.text.SPI_I2S_ITConfig,"ax",%progbits
 19221              		.align	1
 19222              		.global	SPI_I2S_ITConfig
 19223              		.thumb
 19224              		.thumb_func
 19226              	SPI_I2S_ITConfig:
 19227              	.LFB36:
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the specified SPI/I2S interrupts.
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to be enabled or disabled. 
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Tx buffer empty interrupt mask
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Rx buffer not empty interrupt mask
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_ERR: Error interrupt mask
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the specified SPI/I2S interrupt.
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ITConfig(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT, FunctionalState NewState)
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19228              		.loc 1 483 0
 19229              		.cfi_startproc
 19230              		@ args = 0, pretend = 0, frame = 0
 19231              		@ frame_needed = 0, uses_anonymous_args = 0
 19232              		@ link register save eliminated.
 19233              	.LVL35:
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0 ;
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CONFIG_IT(SPI_I2S_IT));
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = SPI_I2S_IT >> 4;
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = (uint16_t)1 << (uint16_t)itpos;
 19234              		.loc 1 494 0
 19235 0000 0909     		lsrs	r1, r1, #4
 19236              	.LVL36:
 19237 0002 0123     		movs	r3, #1
 19238 0004 8B40     		lsls	r3, r3, r1
 19239 0006 9BB2     		uxth	r3, r3
 19240              	.LVL37:
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19241              		.loc 1 496 0
 19242 0008 1AB1     		cbz	r2, .L30
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S interrupt */
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= itmask;
 19243              		.loc 1 499 0
 19244 000a 8288     		ldrh	r2, [r0, #4]
 19245              	.LVL38:
 19246 000c 92B2     		uxth	r2, r2
 19247 000e 1343     		orrs	r3, r3, r2
 19248              	.LVL39:
 19249 0010 03E0     		b	.L32
 19250              	.LVL40:
 19251              	.L30:
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S interrupt */
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~itmask;
 19252              		.loc 1 504 0
 19253 0012 8288     		ldrh	r2, [r0, #4]
 19254              	.LVL41:
 19255 0014 92B2     		uxth	r2, r2
 19256 0016 22EA0303 		bic	r3, r2, r3
 19257              	.LVL42:
 19258              	.L32:
 19259 001a 8380     		strh	r3, [r0, #4]	@ movhi
 19260 001c 7047     		bx	lr
 19261              		.cfi_endproc
 19262              	.LFE36:
 19264              		.section	.text.SPI_I2S_DMACmd,"ax",%progbits
 19265              		.align	1
 19266              		.global	SPI_I2S_DMACmd
 19267              		.thumb
 19268              		.thumb_func
 19270              	SPI_I2S_DMACmd:
 19271              	.LFB37:
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SPIx/I2Sx DMA interface.
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_DMAReq: specifies the SPI/I2S DMA transfer request to be enabled or disabled. 
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be any combination of the following values:
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Tx: Tx buffer DMA transfer request
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_DMAReq_Rx: Rx buffer DMA transfer request
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the selected SPI/I2S DMA transfer request.
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_DMACmd(SPI_TypeDef* SPIx, uint16_t SPI_I2S_DMAReq, FunctionalState NewState)
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19272              		.loc 1 522 0
 19273              		.cfi_startproc
 19274              		@ args = 0, pretend = 0, frame = 0
 19275              		@ frame_needed = 0, uses_anonymous_args = 0
 19276              		@ link register save eliminated.
 19277              	.LVL43:
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_DMAREQ(SPI_I2S_DMAReq));
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19278              		.loc 1 527 0
 19279 0000 1AB1     		cbz	r2, .L34
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI/I2S DMA requests */
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= SPI_I2S_DMAReq;
 19280              		.loc 1 530 0
 19281 0002 8388     		ldrh	r3, [r0, #4]
 19282 0004 9BB2     		uxth	r3, r3
 19283 0006 1943     		orrs	r1, r1, r3
 19284              	.LVL44:
 19285 0008 03E0     		b	.L36
 19286              	.LVL45:
 19287              	.L34:
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI/I2S DMA requests */
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= (uint16_t)~SPI_I2S_DMAReq;
 19288              		.loc 1 535 0
 19289 000a 8388     		ldrh	r3, [r0, #4]
 19290 000c 9BB2     		uxth	r3, r3
 19291 000e 23EA0101 		bic	r1, r3, r1
 19292              	.LVL46:
 19293              	.L36:
 19294 0012 8180     		strh	r1, [r0, #4]	@ movhi
 19295 0014 7047     		bx	lr
 19296              		.cfi_endproc
 19297              	.LFE37:
 19299              		.section	.text.SPI_I2S_SendData,"ax",%progbits
 19300              		.align	1
 19301              		.global	SPI_I2S_SendData
 19302              		.thumb
 19303              		.thumb_func
 19305              	SPI_I2S_SendData:
 19306              	.LFB38:
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmits a Data through the SPIx/I2Sx peripheral.
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  Data : Data to be transmitted.
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_SendData(SPI_TypeDef* SPIx, uint16_t Data)
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19307              		.loc 1 548 0
 19308              		.cfi_startproc
 19309              		@ args = 0, pretend = 0, frame = 0
 19310              		@ frame_needed = 0, uses_anonymous_args = 0
 19311              		@ link register save eliminated.
 19312              	.LVL47:
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Write in the DR register the data to be sent */
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->DR = Data;
 19313              		.loc 1 553 0
 19314 0000 8181     		strh	r1, [r0, #12]	@ movhi
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19315              		.loc 1 554 0
 19316 0002 7047     		bx	lr
 19317              		.cfi_endproc
 19318              	.LFE38:
 19320              		.section	.text.SPI_I2S_ReceiveData,"ax",%progbits
 19321              		.align	1
 19322              		.global	SPI_I2S_ReceiveData
 19323              		.thumb
 19324              		.thumb_func
 19326              	SPI_I2S_ReceiveData:
 19327              	.LFB39:
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the most recent received data by the SPIx/I2Sx peripheral. 
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The value of the received data.
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_I2S_ReceiveData(SPI_TypeDef* SPIx)
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19328              		.loc 1 564 0
 19329              		.cfi_startproc
 19330              		@ args = 0, pretend = 0, frame = 0
 19331              		@ frame_needed = 0, uses_anonymous_args = 0
 19332              		@ link register save eliminated.
 19333              	.LVL48:
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the data in the DR register */
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->DR;
 19334              		.loc 1 569 0
 19335 0000 8089     		ldrh	r0, [r0, #12]
 19336              	.LVL49:
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19337              		.loc 1 570 0
 19338 0002 80B2     		uxth	r0, r0
 19339 0004 7047     		bx	lr
 19340              		.cfi_endproc
 19341              	.LFE39:
 19343              		.section	.text.SPI_NSSInternalSoftwareConfig,"ax",%progbits
 19344              		.align	1
 19345              		.global	SPI_NSSInternalSoftwareConfig
 19346              		.thumb
 19347              		.thumb_func
 19349              	SPI_NSSInternalSoftwareConfig:
 19350              	.LFB40:
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures internally by software the NSS pin for the selected SPI.
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_NSSInternalSoft: specifies the SPI NSS internal state.
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Set: Set NSS pin internally
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_NSSInternalSoft_Reset: Reset NSS pin internally
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_NSSInternalSoftwareConfig(SPI_TypeDef* SPIx, uint16_t SPI_NSSInternalSoft)
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19351              		.loc 1 582 0
 19352              		.cfi_startproc
 19353              		@ args = 0, pretend = 0, frame = 0
 19354              		@ frame_needed = 0, uses_anonymous_args = 0
 19355              		@ link register save eliminated.
 19356              	.LVL50:
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_NSS_INTERNAL(SPI_NSSInternalSoft));
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_NSSInternalSoft != SPI_NSSInternalSoft_Reset)
 19357              		.loc 1 586 0
 19358 0000 4FF6FF63 		movw	r3, #65279
 19359 0004 9942     		cmp	r1, r3
 19360 0006 04D0     		beq	.L40
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set NSS pin internally by software */
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_NSSInternalSoft_Set;
 19361              		.loc 1 589 0
 19362 0008 0388     		ldrh	r3, [r0, #0]
 19363 000a 9BB2     		uxth	r3, r3
 19364 000c 43F48073 		orr	r3, r3, #256
 19365 0010 04E0     		b	.L42
 19366              	.L40:
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Reset NSS pin internally by software */
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_NSSInternalSoft_Reset;
 19367              		.loc 1 594 0
 19368 0012 0388     		ldrh	r3, [r0, #0]
 19369 0014 23F48073 		bic	r3, r3, #256
 19370 0018 1B04     		lsls	r3, r3, #16
 19371 001a 1B0C     		lsrs	r3, r3, #16
 19372              	.L42:
 19373 001c 0380     		strh	r3, [r0, #0]	@ movhi
 19374 001e 7047     		bx	lr
 19375              		.cfi_endproc
 19376              	.LFE40:
 19378              		.section	.text.SPI_SSOutputCmd,"ax",%progbits
 19379              		.align	1
 19380              		.global	SPI_SSOutputCmd
 19381              		.thumb
 19382              		.thumb_func
 19384              	SPI_SSOutputCmd:
 19385              	.LFB41:
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the SS output for the selected SPI.
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx SS output. 
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_SSOutputCmd(SPI_TypeDef* SPIx, FunctionalState NewState)
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19386              		.loc 1 606 0
 19387              		.cfi_startproc
 19388              		@ args = 0, pretend = 0, frame = 0
 19389              		@ frame_needed = 0, uses_anonymous_args = 0
 19390              		@ link register save eliminated.
 19391              	.LVL51:
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19392              		.loc 1 610 0
 19393 0000 21B1     		cbz	r1, .L44
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI SS output */
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 |= CR2_SSOE_Set;
 19394              		.loc 1 613 0
 19395 0002 8388     		ldrh	r3, [r0, #4]
 19396 0004 9BB2     		uxth	r3, r3
 19397 0006 43F00403 		orr	r3, r3, #4
 19398 000a 04E0     		b	.L46
 19399              	.L44:
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI SS output */
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR2 &= CR2_SSOE_Reset;
 19400              		.loc 1 618 0
 19401 000c 8388     		ldrh	r3, [r0, #4]
 19402 000e 23F00403 		bic	r3, r3, #4
 19403 0012 1B04     		lsls	r3, r3, #16
 19404 0014 1B0C     		lsrs	r3, r3, #16
 19405              	.L46:
 19406 0016 8380     		strh	r3, [r0, #4]	@ movhi
 19407 0018 7047     		bx	lr
 19408              		.cfi_endproc
 19409              	.LFE41:
 19411              		.section	.text.SPI_DataSizeConfig,"ax",%progbits
 19412              		.align	1
 19413              		.global	SPI_DataSizeConfig
 19414              		.thumb
 19415              		.thumb_func
 19417              	SPI_DataSizeConfig:
 19418              	.LFB42:
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Configures the data size for the selected SPI.
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_DataSize: specifies the SPI data size.
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_16b: Set data frame format to 16bit
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_DataSize_8b: Set data frame format to 8bit
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_DataSizeConfig(SPI_TypeDef* SPIx, uint16_t SPI_DataSize)
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19419              		.loc 1 632 0
 19420              		.cfi_startproc
 19421              		@ args = 0, pretend = 0, frame = 0
 19422              		@ frame_needed = 0, uses_anonymous_args = 0
 19423              		@ link register save eliminated.
 19424              	.LVL52:
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DATASIZE(SPI_DataSize));
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear DFF bit */
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 &= (uint16_t)~SPI_DataSize_16b;
 19425              		.loc 1 637 0
 19426 0000 0388     		ldrh	r3, [r0, #0]
 19427 0002 23F40063 		bic	r3, r3, #2048
 19428 0006 1B04     		lsls	r3, r3, #16
 19429 0008 1B0C     		lsrs	r3, r3, #16
 19430 000a 0380     		strh	r3, [r0, #0]	@ movhi
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set new DFF bit value */
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= SPI_DataSize;
 19431              		.loc 1 639 0
 19432 000c 0388     		ldrh	r3, [r0, #0]
 19433 000e 9BB2     		uxth	r3, r3
 19434 0010 41EA0303 		orr	r3, r1, r3
 19435 0014 0380     		strh	r3, [r0, #0]	@ movhi
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19436              		.loc 1 640 0
 19437 0016 7047     		bx	lr
 19438              		.cfi_endproc
 19439              	.LFE42:
 19441              		.section	.text.SPI_TransmitCRC,"ax",%progbits
 19442              		.align	1
 19443              		.global	SPI_TransmitCRC
 19444              		.thumb
 19445              		.thumb_func
 19447              	SPI_TransmitCRC:
 19448              	.LFB43:
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Transmit the SPIx CRC value.
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_TransmitCRC(SPI_TypeDef* SPIx)
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19449              		.loc 1 648 0
 19450              		.cfi_startproc
 19451              		@ args = 0, pretend = 0, frame = 0
 19452              		@ frame_needed = 0, uses_anonymous_args = 0
 19453              		@ link register save eliminated.
 19454              	.LVL53:
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Enable the selected SPI CRC transmission */
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->CR1 |= CR1_CRCNext_Set;
 19455              		.loc 1 653 0
 19456 0000 0388     		ldrh	r3, [r0, #0]
 19457 0002 9BB2     		uxth	r3, r3
 19458 0004 43F48053 		orr	r3, r3, #4096
 19459 0008 0380     		strh	r3, [r0, #0]	@ movhi
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19460              		.loc 1 654 0
 19461 000a 7047     		bx	lr
 19462              		.cfi_endproc
 19463              	.LFE43:
 19465              		.section	.text.SPI_CalculateCRC,"ax",%progbits
 19466              		.align	1
 19467              		.global	SPI_CalculateCRC
 19468              		.thumb
 19469              		.thumb_func
 19471              	SPI_CalculateCRC:
 19472              	.LFB44:
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Enables or disables the CRC value calculation of the transferred bytes.
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  NewState: new state of the SPIx CRC value calculation.
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be: ENABLE or DISABLE.
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_CalculateCRC(SPI_TypeDef* SPIx, FunctionalState NewState)
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19473              		.loc 1 664 0
 19474              		.cfi_startproc
 19475              		@ args = 0, pretend = 0, frame = 0
 19476              		@ frame_needed = 0, uses_anonymous_args = 0
 19477              		@ link register save eliminated.
 19478              	.LVL54:
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (NewState != DISABLE)
 19479              		.loc 1 668 0
 19480 0000 21B1     		cbz	r1, .L50
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Enable the selected SPI CRC calculation */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= CR1_CRCEN_Set;
 19481              		.loc 1 671 0
 19482 0002 0388     		ldrh	r3, [r0, #0]
 19483 0004 9BB2     		uxth	r3, r3
 19484 0006 43F40053 		orr	r3, r3, #8192
 19485 000a 04E0     		b	.L52
 19486              	.L50:
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Disable the selected SPI CRC calculation */
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= CR1_CRCEN_Reset;
 19487              		.loc 1 676 0
 19488 000c 0388     		ldrh	r3, [r0, #0]
 19489 000e 23F40053 		bic	r3, r3, #8192
 19490 0012 1B04     		lsls	r3, r3, #16
 19491 0014 1B0C     		lsrs	r3, r3, #16
 19492              	.L52:
 19493 0016 0380     		strh	r3, [r0, #0]	@ movhi
 19494 0018 7047     		bx	lr
 19495              		.cfi_endproc
 19496              	.LFE44:
 19498              		.section	.text.SPI_GetCRC,"ax",%progbits
 19499              		.align	1
 19500              		.global	SPI_GetCRC
 19501              		.thumb
 19502              		.thumb_func
 19504              	SPI_GetCRC:
 19505              	.LFB45:
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the transmit or the receive CRC register value for the specified SPI.
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_CRC: specifies the CRC register to be read.
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Tx: Selects Tx CRC register
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_CRC_Rx: Selects Rx CRC register
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The selected CRC register value..
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRC(SPI_TypeDef* SPIx, uint8_t SPI_CRC)
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19506              		.loc 1 690 0
 19507              		.cfi_startproc
 19508              		@ args = 0, pretend = 0, frame = 0
 19509              		@ frame_needed = 0, uses_anonymous_args = 0
 19510              		@ link register save eliminated.
 19511              	.LVL55:
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t crcreg = 0;
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_CRC(SPI_CRC));
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_CRC != SPI_CRC_Rx)
 19512              		.loc 1 695 0
 19513 0000 0129     		cmp	r1, #1
 19514 0002 02D0     		beq	.L54
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Tx CRC register */
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->TXCRCR;
 19515              		.loc 1 698 0
 19516 0004 008B     		ldrh	r0, [r0, #24]
 19517              	.LVL56:
 19518 0006 80B2     		uxth	r0, r0
 19519              	.LVL57:
 19520 0008 7047     		bx	lr
 19521              	.LVL58:
 19522              	.L54:
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Get the Rx CRC register */
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     crcreg = SPIx->RXCRCR;
 19523              		.loc 1 703 0
 19524 000a 808A     		ldrh	r0, [r0, #20]
 19525              	.LVL59:
 19526 000c 80B2     		uxth	r0, r0
 19527              	.LVL60:
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the selected CRC register */
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return crcreg;
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19528              		.loc 1 707 0
 19529 000e 7047     		bx	lr
 19530              		.cfi_endproc
 19531              	.LFE45:
 19533              		.section	.text.SPI_GetCRCPolynomial,"ax",%progbits
 19534              		.align	1
 19535              		.global	SPI_GetCRCPolynomial
 19536              		.thumb
 19537              		.thumb_func
 19539              	SPI_GetCRCPolynomial:
 19540              	.LFB46:
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Returns the CRC Polynomial register value for the specified SPI.
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The CRC Polynomial register value.
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** uint16_t SPI_GetCRCPolynomial(SPI_TypeDef* SPIx)
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19541              		.loc 1 715 0
 19542              		.cfi_startproc
 19543              		@ args = 0, pretend = 0, frame = 0
 19544              		@ frame_needed = 0, uses_anonymous_args = 0
 19545              		@ link register save eliminated.
 19546              	.LVL61:
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the CRC polynomial register */
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return SPIx->CRCPR;
 19547              		.loc 1 720 0
 19548 0000 008A     		ldrh	r0, [r0, #16]
 19549              	.LVL62:
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19550              		.loc 1 721 0
 19551 0002 80B2     		uxth	r0, r0
 19552 0004 7047     		bx	lr
 19553              		.cfi_endproc
 19554              	.LFE46:
 19556              		.section	.text.SPI_BiDirectionalLineConfig,"ax",%progbits
 19557              		.align	1
 19558              		.global	SPI_BiDirectionalLineConfig
 19559              		.thumb
 19560              		.thumb_func
 19562              	SPI_BiDirectionalLineConfig:
 19563              	.LFB47:
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Selects the data transfer direction in bi-directional mode for the specified SPI.
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be 1, 2 or 3 to select the SPI peripheral.
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_Direction: specifies the data transfer direction in bi-directional mode. 
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Tx: Selects Tx transmission direction
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_Direction_Rx: Selects Rx receive direction
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_BiDirectionalLineConfig(SPI_TypeDef* SPIx, uint16_t SPI_Direction)
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19564              		.loc 1 733 0
 19565              		.cfi_startproc
 19566              		@ args = 0, pretend = 0, frame = 0
 19567              		@ frame_needed = 0, uses_anonymous_args = 0
 19568              		@ link register save eliminated.
 19569              	.LVL63:
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_DIRECTION(SPI_Direction));
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (SPI_Direction == SPI_Direction_Tx)
 19570              		.loc 1 737 0
 19571 0000 B1F5804F 		cmp	r1, #16384
 19572 0004 04D1     		bne	.L58
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Tx only mode */
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 |= SPI_Direction_Tx;
 19573              		.loc 1 740 0
 19574 0006 0388     		ldrh	r3, [r0, #0]
 19575 0008 9BB2     		uxth	r3, r3
 19576 000a 43F48043 		orr	r3, r3, #16384
 19577 000e 04E0     		b	.L60
 19578              	.L58:
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Set the Rx only mode */
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->CR1 &= SPI_Direction_Rx;
 19579              		.loc 1 745 0
 19580 0010 0388     		ldrh	r3, [r0, #0]
 19581 0012 23F48043 		bic	r3, r3, #16384
 19582 0016 1B04     		lsls	r3, r3, #16
 19583 0018 1B0C     		lsrs	r3, r3, #16
 19584              	.L60:
 19585 001a 0380     		strh	r3, [r0, #0]	@ movhi
 19586 001c 7047     		bx	lr
 19587              		.cfi_endproc
 19588              	.LFE47:
 19590              		.section	.text.SPI_I2S_GetFlagStatus,"ax",%progbits
 19591              		.align	1
 19592              		.global	SPI_I2S_GetFlagStatus
 19593              		.thumb
 19594              		.thumb_func
 19596              	SPI_I2S_GetFlagStatus:
 19597              	.LFB48:
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S flag is set or not.
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI/I2S flag to check. 
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_TXE: Transmit buffer empty flag.
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_RXNE: Receive buffer not empty flag.
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_BSY: Busy flag.
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_FLAG_OVR: Overrun flag.
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_MODF: Mode Fault flag.
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_FLAG_CRCERR: CRC Error flag.
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_UDR: Underrun Error flag.
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_FLAG_CHSIDE: Channel Side flag.
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_FLAG (SET or RESET).
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** FlagStatus SPI_I2S_GetFlagStatus(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19598              		.loc 1 767 0
 19599              		.cfi_startproc
 19600              		@ args = 0, pretend = 0, frame = 0
 19601              		@ frame_needed = 0, uses_anonymous_args = 0
 19602              		@ link register save eliminated.
 19603              	.LVL64:
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   FlagStatus bitstatus = RESET;
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_FLAG(SPI_I2S_FLAG));
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S flag */
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if ((SPIx->SR & SPI_I2S_FLAG) != (uint16_t)RESET)
 19604              		.loc 1 773 0
 19605 0000 0389     		ldrh	r3, [r0, #8]
 19606              	.LVL65:
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is set */
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 19607              		.loc 1 776 0
 19608 0002 1942     		tst	r1, r3
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_FLAG is reset */
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_FLAG status */
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return  bitstatus;
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19609              		.loc 1 785 0
 19610 0004 0CBF     		ite	eq
 19611 0006 0020     		moveq	r0, #0
 19612 0008 0120     		movne	r0, #1
 19613              	.LVL66:
 19614 000a 7047     		bx	lr
 19615              		.cfi_endproc
 19616              	.LFE48:
 19618              		.section	.text.SPI_I2S_ClearFlag,"ax",%progbits
 19619              		.align	1
 19620              		.global	SPI_I2S_ClearFlag
 19621              		.thumb
 19622              		.thumb_func
 19624              	SPI_I2S_ClearFlag:
 19625              	.LFB49:
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) flag.
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_FLAG: specifies the SPI flag to clear. 
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR flag.
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun error) flag is cleared by software sequence: a read 
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_DR register (SPI_I2S_ReceiveData()) followed by a read 
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()).
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun error) flag is cleared by a read operation to 
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     SPI_SR register (SPI_I2S_GetFlagStatus()).
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) flag is cleared by software sequence: a read/write 
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetFlagStatus()) followed by a 
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     write operation to SPI_CR1 register (SPI_Cmd() to enable the SPI).
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearFlag(SPI_TypeDef* SPIx, uint16_t SPI_I2S_FLAG)
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19626              		.loc 1 805 0
 19627              		.cfi_startproc
 19628              		@ args = 0, pretend = 0, frame = 0
 19629              		@ frame_needed = 0, uses_anonymous_args = 0
 19630              		@ link register save eliminated.
 19631              	.LVL67:
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_FLAG(SPI_I2S_FLAG));
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* Clear the selected SPI CRC Error (CRCERR) flag */
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     SPIx->SR = (uint16_t)~SPI_I2S_FLAG;
 19632              		.loc 1 811 0
 19633 0000 C943     		mvns	r1, r1
 19634              	.LVL68:
 19635 0002 0181     		strh	r1, [r0, #8]	@ movhi
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19636              		.loc 1 812 0
 19637 0004 7047     		bx	lr
 19638              		.cfi_endproc
 19639              	.LFE49:
 19641              		.section	.text.SPI_I2S_GetITStatus,"ax",%progbits
 19642              		.align	1
 19643              		.global	SPI_I2S_GetITStatus
 19644              		.thumb
 19645              		.thumb_func
 19647              	SPI_I2S_GetITStatus:
 19648              	.LFB50:
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Checks whether the specified SPI/I2S interrupt has occurred or not.
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 2 or 3 in I2S mode
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI/I2S interrupt source to check. 
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This parameter can be one of the following values:
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_TXE: Transmit buffer empty interrupt.
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_RXNE: Receive buffer not empty interrupt.
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_I2S_IT_OVR: Overrun interrupt.
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_MODF: Mode Fault interrupt.
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg SPI_IT_CRCERR: CRC Error interrupt.
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     @arg I2S_IT_UDR: Underrun Error interrupt.
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval The new state of SPI_I2S_IT (SET or RESET).
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19649              		.loc 1 830 0
 19650              		.cfi_startproc
 19651              		@ args = 0, pretend = 0, frame = 0
 19652              		@ frame_needed = 0, uses_anonymous_args = 0
 19653              	.LVL69:
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   ITStatus bitstatus = RESET;
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0, itmask = 0, enablestatus = 0;
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_GET_IT(SPI_I2S_IT));
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT index */
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 19654              		.loc 1 839 0
 19655 0000 0123     		movs	r3, #1
 19656 0002 01F00F02 		and	r2, r1, #15
 19657 0006 13FA02F2 		lsls	r2, r3, r2
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19658              		.loc 1 830 0
 19659 000a 10B5     		push	{r4, lr}
 19660              	.LCFI4:
 19661              		.cfi_def_cfa_offset 8
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI/I2S IT mask */
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = SPI_I2S_IT >> 4;
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Set the IT mask */
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = 0x01 << itmask;
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI_I2S_IT enable bit status */
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 19662              		.loc 1 848 0
 19663 000c 8488     		ldrh	r4, [r0, #4]
 19664              		.cfi_offset 14, -4
 19665              		.cfi_offset 4, -8
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the status of the specified SPI/I2S interrupt */
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   if (((SPIx->SR & itpos) != (uint16_t)RESET) && enablestatus)
 19666              		.loc 1 851 0
 19667 000e 0089     		ldrh	r0, [r0, #8]
 19668              	.LVL70:
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   enablestatus = (SPIx->CR2 & itmask) ;
 19669              		.loc 1 848 0
 19670 0010 A4B2     		uxth	r4, r4
 19671              	.LVL71:
 19672              		.loc 1 851 0
 19673 0012 80B2     		uxth	r0, r0
 19674 0014 1040     		ands	r0, r0, r2
 19675 0016 05D0     		beq	.L64
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itmask = 0x01 << itmask;
 19676              		.loc 1 845 0 discriminator 1
 19677 0018 0909     		lsrs	r1, r1, #4
 19678              	.LVL72:
 19679 001a 8B40     		lsls	r3, r3, r1
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** ITStatus SPI_I2S_GetITStatus(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 19680              		.loc 1 829 0 discriminator 1
 19681 001c 1C42     		tst	r4, r3
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is set */
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = SET;
 19682              		.loc 1 854 0 discriminator 1
 19683 001e 0CBF     		ite	eq
 19684 0020 0020     		moveq	r0, #0
 19685 0022 0120     		movne	r0, #1
 19686              	.L64:
 19687              	.LVL73:
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   else
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   {
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     /* SPI_I2S_IT is reset */
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****     bitstatus = RESET;
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   }
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Return the SPI_I2S_IT status */
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   return bitstatus;
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19688              		.loc 1 863 0
 19689 0024 10BD     		pop	{r4, pc}
 19690              		.cfi_endproc
 19691              	.LFE50:
 19693              		.section	.text.SPI_I2S_ClearITPendingBit,"ax",%progbits
 19694              		.align	1
 19695              		.global	SPI_I2S_ClearITPendingBit
 19696              		.thumb
 19697              		.thumb_func
 19699              	SPI_I2S_ClearITPendingBit:
 19700              	.LFB51:
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** /**
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @brief  Clears the SPIx CRC Error (CRCERR) interrupt pending bit.
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPIx: where x can be
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - 1, 2 or 3 in SPI mode 
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @param  SPI_I2S_IT: specifies the SPI interrupt pending bit to clear.
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   This function clears only CRCERR interrupt pending bit.   
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @note
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - OVR (OverRun Error) interrupt pending bit is cleared by software 
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     sequence: a read operation to SPI_DR register (SPI_I2S_ReceiveData()) 
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a read operation to SPI_SR register (SPI_I2S_GetITStatus()).
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - UDR (UnderRun Error) interrupt pending bit is cleared by a read 
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     operation to SPI_SR register (SPI_I2S_GetITStatus()).
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *   - MODF (Mode Fault) interrupt pending bit is cleared by software sequence:
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     a read/write operation to SPI_SR register (SPI_I2S_GetITStatus()) 
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     followed by a write operation to SPI_CR1 register (SPI_Cmd() to enable 
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   *     the SPI).
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   * @retval None
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   */
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** void SPI_I2S_ClearITPendingBit(SPI_TypeDef* SPIx, uint8_t SPI_I2S_IT)
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** {
 19701              		.loc 1 884 0
 19702              		.cfi_startproc
 19703              		@ args = 0, pretend = 0, frame = 0
 19704              		@ frame_needed = 0, uses_anonymous_args = 0
 19705              		@ link register save eliminated.
 19706              	.LVL74:
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   uint16_t itpos = 0;
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Check the parameters */
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_ALL_PERIPH(SPIx));
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   assert_param(IS_SPI_I2S_CLEAR_IT(SPI_I2S_IT));
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Get the SPI IT index */
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   itpos = 0x01 << (SPI_I2S_IT & 0x0F);
 19707              		.loc 1 891 0
 19708 0000 01F00F01 		and	r1, r1, #15
 19709              	.LVL75:
 19710 0004 0123     		movs	r3, #1
 19711 0006 8B40     		lsls	r3, r3, r1
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** 
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   /* Clear the selected SPI CRC Error (CRCERR) interrupt pending bit */
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c ****   SPIx->SR = (uint16_t)~itpos;
 19712              		.loc 1 894 0
 19713 0008 DB43     		mvns	r3, r3
 19714 000a 0381     		strh	r3, [r0, #8]	@ movhi
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c **** }
 19715              		.loc 1 895 0
 19716 000c 7047     		bx	lr
 19717              		.cfi_endproc
 19718              	.LFE51:
 19720              		.text
 19721              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_spi.c
     /tmp/cclmlN51.s:18782  .text.SPI_I2S_DeInit:00000000 $t
     /tmp/cclmlN51.s:18787  .text.SPI_I2S_DeInit:00000000 SPI_I2S_DeInit
     /tmp/cclmlN51.s:18856  .text.SPI_I2S_DeInit:00000058 $d
     /tmp/cclmlN51.s:18863  .text.SPI_Init:00000000 $t
     /tmp/cclmlN51.s:18868  .text.SPI_Init:00000000 SPI_Init
     /tmp/cclmlN51.s:18926  .text.I2S_Init:00000000 $t
     /tmp/cclmlN51.s:18931  .text.I2S_Init:00000000 I2S_Init
     /tmp/cclmlN51.s:19081  .text.SPI_StructInit:00000000 $t
     /tmp/cclmlN51.s:19086  .text.SPI_StructInit:00000000 SPI_StructInit
     /tmp/cclmlN51.s:19120  .text.I2S_StructInit:00000000 $t
     /tmp/cclmlN51.s:19125  .text.I2S_StructInit:00000000 I2S_StructInit
     /tmp/cclmlN51.s:19155  .text.SPI_Cmd:00000000 $t
     /tmp/cclmlN51.s:19160  .text.SPI_Cmd:00000000 SPI_Cmd
     /tmp/cclmlN51.s:19188  .text.I2S_Cmd:00000000 $t
     /tmp/cclmlN51.s:19193  .text.I2S_Cmd:00000000 I2S_Cmd
     /tmp/cclmlN51.s:19221  .text.SPI_I2S_ITConfig:00000000 $t
     /tmp/cclmlN51.s:19226  .text.SPI_I2S_ITConfig:00000000 SPI_I2S_ITConfig
     /tmp/cclmlN51.s:19265  .text.SPI_I2S_DMACmd:00000000 $t
     /tmp/cclmlN51.s:19270  .text.SPI_I2S_DMACmd:00000000 SPI_I2S_DMACmd
     /tmp/cclmlN51.s:19300  .text.SPI_I2S_SendData:00000000 $t
     /tmp/cclmlN51.s:19305  .text.SPI_I2S_SendData:00000000 SPI_I2S_SendData
     /tmp/cclmlN51.s:19321  .text.SPI_I2S_ReceiveData:00000000 $t
     /tmp/cclmlN51.s:19326  .text.SPI_I2S_ReceiveData:00000000 SPI_I2S_ReceiveData
     /tmp/cclmlN51.s:19344  .text.SPI_NSSInternalSoftwareConfig:00000000 $t
     /tmp/cclmlN51.s:19349  .text.SPI_NSSInternalSoftwareConfig:00000000 SPI_NSSInternalSoftwareConfig
     /tmp/cclmlN51.s:19379  .text.SPI_SSOutputCmd:00000000 $t
     /tmp/cclmlN51.s:19384  .text.SPI_SSOutputCmd:00000000 SPI_SSOutputCmd
     /tmp/cclmlN51.s:19412  .text.SPI_DataSizeConfig:00000000 $t
     /tmp/cclmlN51.s:19417  .text.SPI_DataSizeConfig:00000000 SPI_DataSizeConfig
     /tmp/cclmlN51.s:19442  .text.SPI_TransmitCRC:00000000 $t
     /tmp/cclmlN51.s:19447  .text.SPI_TransmitCRC:00000000 SPI_TransmitCRC
     /tmp/cclmlN51.s:19466  .text.SPI_CalculateCRC:00000000 $t
     /tmp/cclmlN51.s:19471  .text.SPI_CalculateCRC:00000000 SPI_CalculateCRC
     /tmp/cclmlN51.s:19499  .text.SPI_GetCRC:00000000 $t
     /tmp/cclmlN51.s:19504  .text.SPI_GetCRC:00000000 SPI_GetCRC
     /tmp/cclmlN51.s:19534  .text.SPI_GetCRCPolynomial:00000000 $t
     /tmp/cclmlN51.s:19539  .text.SPI_GetCRCPolynomial:00000000 SPI_GetCRCPolynomial
     /tmp/cclmlN51.s:19557  .text.SPI_BiDirectionalLineConfig:00000000 $t
     /tmp/cclmlN51.s:19562  .text.SPI_BiDirectionalLineConfig:00000000 SPI_BiDirectionalLineConfig
     /tmp/cclmlN51.s:19591  .text.SPI_I2S_GetFlagStatus:00000000 $t
     /tmp/cclmlN51.s:19596  .text.SPI_I2S_GetFlagStatus:00000000 SPI_I2S_GetFlagStatus
     /tmp/cclmlN51.s:19619  .text.SPI_I2S_ClearFlag:00000000 $t
     /tmp/cclmlN51.s:19624  .text.SPI_I2S_ClearFlag:00000000 SPI_I2S_ClearFlag
     /tmp/cclmlN51.s:19642  .text.SPI_I2S_GetITStatus:00000000 $t
     /tmp/cclmlN51.s:19647  .text.SPI_I2S_GetITStatus:00000000 SPI_I2S_GetITStatus
     /tmp/cclmlN51.s:19694  .text.SPI_I2S_ClearITPendingBit:00000000 $t
     /tmp/cclmlN51.s:19699  .text.SPI_I2S_ClearITPendingBit:00000000 SPI_I2S_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
