   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_rcc.c"
  23              	.Ltext0:
  24              		.file 1 "../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
 18517              		.align	1
 18518              		.global	RCC_DeInit
 18519              		.thumb
 18520              		.thumb_func
 18522              	RCC_DeInit:
 18523              	.LFB29:
   1:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  18:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  21:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  22:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  25:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  27:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  28:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  29:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  32:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  33:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  34:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  36:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  37:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  38:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  39:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  40:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  41:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  42:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  44:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  45:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  46:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  49:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  51:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  56:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  60:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  65:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  70:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  74:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  79:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  83:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  87:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  89:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  94:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  98:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18524              		.loc 1 218 0
 18525              		.cfi_startproc
 18526              		@ args = 0, pretend = 0, frame = 0
 18527              		@ frame_needed = 0, uses_anonymous_args = 0
 18528              		@ link register save eliminated.
 219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
 18529              		.loc 1 220 0
 18530 0000 0D4B     		ldr	r3, .L2
 18531 0002 1A68     		ldr	r2, [r3, #0]
 18532 0004 42F00102 		orr	r2, r2, #1
 18533 0008 1A60     		str	r2, [r3, #0]
 221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
 18534              		.loc 1 224 0
 18535 000a 5968     		ldr	r1, [r3, #4]
 18536 000c 0B4A     		ldr	r2, .L2+4
 18537 000e 01EA0202 		and	r2, r1, r2
 18538 0012 5A60     		str	r2, [r3, #4]
 225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 18539              		.loc 1 230 0
 18540 0014 1A68     		ldr	r2, [r3, #0]
 18541 0016 22F08472 		bic	r2, r2, #17301504
 18542 001a 22F48032 		bic	r2, r2, #65536
 18543 001e 1A60     		str	r2, [r3, #0]
 231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 18544              		.loc 1 233 0
 18545 0020 1A68     		ldr	r2, [r3, #0]
 18546 0022 22F48022 		bic	r2, r2, #262144
 18547 0026 1A60     		str	r2, [r3, #0]
 234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 18548              		.loc 1 236 0
 18549 0028 5A68     		ldr	r2, [r3, #4]
 18550 002a 22F4FE02 		bic	r2, r2, #8323072
 18551 002e 5A60     		str	r2, [r3, #4]
 237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 18552              		.loc 1 255 0
 18553 0030 4FF41F02 		mov	r2, #10420224
 18554 0034 9A60     		str	r2, [r3, #8]
 256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18555              		.loc 1 258 0
 18556 0036 7047     		bx	lr
 18557              	.L3:
 18558              		.align	2
 18559              	.L2:
 18560 0038 00100240 		.word	1073876992
 18561 003c 0000FFF8 		.word	-117506048
 18562              		.cfi_endproc
 18563              	.LFE29:
 18565              		.section	.text.RCC_HSEConfig,"ax",%progbits
 18566              		.align	1
 18567              		.global	RCC_HSEConfig
 18568              		.thumb
 18569              		.thumb_func
 18571              	RCC_HSEConfig:
 18572              	.LFB30:
 259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18573              		.loc 1 271 0
 18574              		.cfi_startproc
 18575              		@ args = 0, pretend = 0, frame = 0
 18576              		@ frame_needed = 0, uses_anonymous_args = 0
 18577              		@ link register save eliminated.
 18578              	.LVL0:
 272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 18579              		.loc 1 276 0
 18580 0000 0C4B     		ldr	r3, .L9
 277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
 18581              		.loc 1 280 0
 18582 0002 B0F5803F 		cmp	r0, #65536
 276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
 18583              		.loc 1 276 0
 18584 0006 1A68     		ldr	r2, [r3, #0]
 18585 0008 22F48032 		bic	r2, r2, #65536
 18586 000c 1A60     		str	r2, [r3, #0]
 278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 18587              		.loc 1 278 0
 18588 000e 1A68     		ldr	r2, [r3, #0]
 18589 0010 22F48022 		bic	r2, r2, #262144
 18590 0014 1A60     		str	r2, [r3, #0]
 18591              		.loc 1 280 0
 18592 0016 03D0     		beq	.L6
 18593 0018 B0F5802F 		cmp	r0, #262144
 18594 001c 09D1     		bne	.L4
 18595 001e 04E0     		b	.L8
 18596              	.L6:
 281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
 18597              		.loc 1 284 0
 18598 0020 1A68     		ldr	r2, [r3, #0]
 18599 0022 42F48032 		orr	r2, r2, #65536
 18600 0026 1A60     		str	r2, [r3, #0]
 285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 18601              		.loc 1 285 0
 18602 0028 7047     		bx	lr
 18603              	.L8:
 286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 18604              		.loc 1 289 0
 18605 002a 1A68     		ldr	r2, [r3, #0]
 18606 002c 42F4A022 		orr	r2, r2, #327680
 18607 0030 1A60     		str	r2, [r3, #0]
 18608              	.L4:
 18609 0032 7047     		bx	lr
 18610              	.L10:
 18611              		.align	2
 18612              	.L9:
 18613 0034 00100240 		.word	1073876992
 18614              		.cfi_endproc
 18615              	.LFE30:
 18617              		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 18618              		.align	1
 18619              		.global	RCC_AdjustHSICalibrationValue
 18620              		.thumb
 18621              		.thumb_func
 18623              	RCC_AdjustHSICalibrationValue:
 18624              	.LFB32:
 290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18625              		.loc 1 335 0
 18626              		.cfi_startproc
 18627              		@ args = 0, pretend = 0, frame = 0
 18628              		@ frame_needed = 0, uses_anonymous_args = 0
 18629              		@ link register save eliminated.
 18630              	.LVL1:
 336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 18631              		.loc 1 339 0
 18632 0000 034B     		ldr	r3, .L12
 18633 0002 1A68     		ldr	r2, [r3, #0]
 18634              	.LVL2:
 340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 18635              		.loc 1 341 0
 18636 0004 22F0F802 		bic	r2, r2, #248
 18637              	.LVL3:
 342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 18638              		.loc 1 343 0
 18639 0008 42EAC002 		orr	r2, r2, r0, lsl #3
 18640              	.LVL4:
 344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 18641              		.loc 1 345 0
 18642 000c 1A60     		str	r2, [r3, #0]
 346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18643              		.loc 1 346 0
 18644 000e 7047     		bx	lr
 18645              	.L13:
 18646              		.align	2
 18647              	.L12:
 18648 0010 00100240 		.word	1073876992
 18649              		.cfi_endproc
 18650              	.LFE32:
 18652              		.section	.text.RCC_HSICmd,"ax",%progbits
 18653              		.align	1
 18654              		.global	RCC_HSICmd
 18655              		.thumb
 18656              		.thumb_func
 18658              	RCC_HSICmd:
 18659              	.LFB33:
 347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18660              		.loc 1 355 0
 18661              		.cfi_startproc
 18662              		@ args = 0, pretend = 0, frame = 0
 18663              		@ frame_needed = 0, uses_anonymous_args = 0
 18664              		@ link register save eliminated.
 18665              	.LVL5:
 356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 18666              		.loc 1 358 0
 18667 0000 014B     		ldr	r3, .L15
 18668 0002 1860     		str	r0, [r3, #0]
 359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18669              		.loc 1 359 0
 18670 0004 7047     		bx	lr
 18671              	.L16:
 18672 0006 00BF     		.align	2
 18673              	.L15:
 18674 0008 00004242 		.word	1111621632
 18675              		.cfi_endproc
 18676              	.LFE33:
 18678              		.section	.text.RCC_PLLConfig,"ax",%progbits
 18679              		.align	1
 18680              		.global	RCC_PLLConfig
 18681              		.thumb
 18682              		.thumb_func
 18684              	RCC_PLLConfig:
 18685              	.LFB34:
 360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18686              		.loc 1 379 0
 18687              		.cfi_startproc
 18688              		@ args = 0, pretend = 0, frame = 0
 18689              		@ frame_needed = 0, uses_anonymous_args = 0
 18690              		@ link register save eliminated.
 18691              	.LVL6:
 380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 18692              		.loc 1 386 0
 18693 0000 044B     		ldr	r3, .L18
 18694 0002 5A68     		ldr	r2, [r3, #4]
 18695              	.LVL7:
 387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 18696              		.loc 1 388 0
 18697 0004 22F47C12 		bic	r2, r2, #4128768
 18698              	.LVL8:
 389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 18699              		.loc 1 390 0
 18700 0008 40EA0202 		orr	r2, r0, r2
 18701              	.LVL9:
 18702 000c 0A43     		orrs	r2, r2, r1
 18703              	.LVL10:
 391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 18704              		.loc 1 392 0
 18705 000e 5A60     		str	r2, [r3, #4]
 393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18706              		.loc 1 393 0
 18707 0010 7047     		bx	lr
 18708              	.L19:
 18709 0012 00BF     		.align	2
 18710              	.L18:
 18711 0014 00100240 		.word	1073876992
 18712              		.cfi_endproc
 18713              	.LFE34:
 18715              		.section	.text.RCC_PLLCmd,"ax",%progbits
 18716              		.align	1
 18717              		.global	RCC_PLLCmd
 18718              		.thumb
 18719              		.thumb_func
 18721              	RCC_PLLCmd:
 18722              	.LFB35:
 394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18723              		.loc 1 402 0
 18724              		.cfi_startproc
 18725              		@ args = 0, pretend = 0, frame = 0
 18726              		@ frame_needed = 0, uses_anonymous_args = 0
 18727              		@ link register save eliminated.
 18728              	.LVL11:
 403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 18729              		.loc 1 406 0
 18730 0000 014B     		ldr	r3, .L21
 18731 0002 1860     		str	r0, [r3, #0]
 407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18732              		.loc 1 407 0
 18733 0004 7047     		bx	lr
 18734              	.L22:
 18735 0006 00BF     		.align	2
 18736              	.L21:
 18737 0008 60004242 		.word	1111621728
 18738              		.cfi_endproc
 18739              	.LFE35:
 18741              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 18742              		.align	1
 18743              		.global	RCC_SYSCLKConfig
 18744              		.thumb
 18745              		.thumb_func
 18747              	RCC_SYSCLKConfig:
 18748              	.LFB36:
 408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 458:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 461:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 469:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 470:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 471:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 473:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 478:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 479:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 481:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 483:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 486:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 494:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 495:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 496:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 497:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 499:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 504:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 505:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 507:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 510:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 512:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 513:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 514:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 515:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 517:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 522:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 523:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 525:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 527:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 530:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 538:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 539:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 540:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 541:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 545:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 546:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 548:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 550:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 553:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 555:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 556:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 563:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 564:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18749              		.loc 1 565 0
 18750              		.cfi_startproc
 18751              		@ args = 0, pretend = 0, frame = 0
 18752              		@ frame_needed = 0, uses_anonymous_args = 0
 18753              		@ link register save eliminated.
 18754              	.LVL12:
 566:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 567:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 569:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 18755              		.loc 1 569 0
 18756 0000 034B     		ldr	r3, .L24
 18757 0002 5A68     		ldr	r2, [r3, #4]
 18758              	.LVL13:
 570:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 18759              		.loc 1 571 0
 18760 0004 22F00302 		bic	r2, r2, #3
 18761              	.LVL14:
 572:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 18762              		.loc 1 573 0
 18763 0008 40EA0202 		orr	r2, r0, r2
 18764              	.LVL15:
 574:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 18765              		.loc 1 575 0
 18766 000c 5A60     		str	r2, [r3, #4]
 576:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18767              		.loc 1 576 0
 18768 000e 7047     		bx	lr
 18769              	.L25:
 18770              		.align	2
 18771              	.L24:
 18772 0010 00100240 		.word	1073876992
 18773              		.cfi_endproc
 18774              	.LFE36:
 18776              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 18777              		.align	1
 18778              		.global	RCC_GetSYSCLKSource
 18779              		.thumb
 18780              		.thumb_func
 18782              	RCC_GetSYSCLKSource:
 18783              	.LFB37:
 577:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 578:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 579:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 581:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 587:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18784              		.loc 1 588 0
 18785              		.cfi_startproc
 18786              		@ args = 0, pretend = 0, frame = 0
 18787              		@ frame_needed = 0, uses_anonymous_args = 0
 18788              		@ link register save eliminated.
 589:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 18789              		.loc 1 589 0
 18790 0000 024B     		ldr	r3, .L27
 18791 0002 5868     		ldr	r0, [r3, #4]
 590:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18792              		.loc 1 590 0
 18793 0004 00F00C00 		and	r0, r0, #12
 18794 0008 7047     		bx	lr
 18795              	.L28:
 18796 000a 00BF     		.align	2
 18797              	.L27:
 18798 000c 00100240 		.word	1073876992
 18799              		.cfi_endproc
 18800              	.LFE37:
 18802              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 18803              		.align	1
 18804              		.global	RCC_HCLKConfig
 18805              		.thumb
 18806              		.thumb_func
 18808              	RCC_HCLKConfig:
 18809              	.LFB38:
 591:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 592:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 593:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 607:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 608:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18810              		.loc 1 609 0
 18811              		.cfi_startproc
 18812              		@ args = 0, pretend = 0, frame = 0
 18813              		@ frame_needed = 0, uses_anonymous_args = 0
 18814              		@ link register save eliminated.
 18815              	.LVL16:
 610:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 611:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 613:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 18816              		.loc 1 613 0
 18817 0000 034B     		ldr	r3, .L30
 18818 0002 5A68     		ldr	r2, [r3, #4]
 18819              	.LVL17:
 614:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 18820              		.loc 1 615 0
 18821 0004 22F0F002 		bic	r2, r2, #240
 18822              	.LVL18:
 616:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 18823              		.loc 1 617 0
 18824 0008 40EA0202 		orr	r2, r0, r2
 18825              	.LVL19:
 618:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 18826              		.loc 1 619 0
 18827 000c 5A60     		str	r2, [r3, #4]
 620:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18828              		.loc 1 620 0
 18829 000e 7047     		bx	lr
 18830              	.L31:
 18831              		.align	2
 18832              	.L30:
 18833 0010 00100240 		.word	1073876992
 18834              		.cfi_endproc
 18835              	.LFE38:
 18837              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 18838              		.align	1
 18839              		.global	RCC_PCLK1Config
 18840              		.thumb
 18841              		.thumb_func
 18843              	RCC_PCLK1Config:
 18844              	.LFB39:
 621:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 622:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 623:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 633:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 634:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18845              		.loc 1 635 0
 18846              		.cfi_startproc
 18847              		@ args = 0, pretend = 0, frame = 0
 18848              		@ frame_needed = 0, uses_anonymous_args = 0
 18849              		@ link register save eliminated.
 18850              	.LVL20:
 636:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 637:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 639:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 18851              		.loc 1 639 0
 18852 0000 034B     		ldr	r3, .L33
 18853 0002 5A68     		ldr	r2, [r3, #4]
 18854              	.LVL21:
 640:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 18855              		.loc 1 641 0
 18856 0004 22F4E062 		bic	r2, r2, #1792
 18857              	.LVL22:
 642:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 18858              		.loc 1 643 0
 18859 0008 40EA0202 		orr	r2, r0, r2
 18860              	.LVL23:
 644:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 18861              		.loc 1 645 0
 18862 000c 5A60     		str	r2, [r3, #4]
 646:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18863              		.loc 1 646 0
 18864 000e 7047     		bx	lr
 18865              	.L34:
 18866              		.align	2
 18867              	.L33:
 18868 0010 00100240 		.word	1073876992
 18869              		.cfi_endproc
 18870              	.LFE39:
 18872              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 18873              		.align	1
 18874              		.global	RCC_PCLK2Config
 18875              		.thumb
 18876              		.thumb_func
 18878              	RCC_PCLK2Config:
 18879              	.LFB40:
 647:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 648:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 649:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 659:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 660:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18880              		.loc 1 661 0
 18881              		.cfi_startproc
 18882              		@ args = 0, pretend = 0, frame = 0
 18883              		@ frame_needed = 0, uses_anonymous_args = 0
 18884              		@ link register save eliminated.
 18885              	.LVL24:
 662:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 663:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 665:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 18886              		.loc 1 665 0
 18887 0000 034B     		ldr	r3, .L36
 18888 0002 5A68     		ldr	r2, [r3, #4]
 18889              	.LVL25:
 666:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 18890              		.loc 1 667 0
 18891 0004 22F46052 		bic	r2, r2, #14336
 18892              	.LVL26:
 668:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 18893              		.loc 1 669 0
 18894 0008 42EAC002 		orr	r2, r2, r0, lsl #3
 18895              	.LVL27:
 670:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 18896              		.loc 1 671 0
 18897 000c 5A60     		str	r2, [r3, #4]
 672:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18898              		.loc 1 672 0
 18899 000e 7047     		bx	lr
 18900              	.L37:
 18901              		.align	2
 18902              	.L36:
 18903 0010 00100240 		.word	1073876992
 18904              		.cfi_endproc
 18905              	.LFE40:
 18907              		.section	.text.RCC_ITConfig,"ax",%progbits
 18908              		.align	1
 18909              		.global	RCC_ITConfig
 18910              		.thumb
 18911              		.thumb_func
 18913              	RCC_ITConfig:
 18914              	.LFB41:
 673:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 674:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 675:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 678:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 688:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 690:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 696:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 699:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 700:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18915              		.loc 1 701 0
 18916              		.cfi_startproc
 18917              		@ args = 0, pretend = 0, frame = 0
 18918              		@ frame_needed = 0, uses_anonymous_args = 0
 18919              		@ link register save eliminated.
 18920              	.LVL28:
 18921 0000 044B     		ldr	r3, .L42
 702:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 704:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 18922              		.loc 1 705 0
 18923 0002 11B1     		cbz	r1, .L39
 706:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 707:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 18924              		.loc 1 708 0
 18925 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 18926 0006 1043     		orrs	r0, r0, r2
 18927              	.LVL29:
 18928 0008 02E0     		b	.L41
 18929              	.LVL30:
 18930              	.L39:
 709:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 710:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 711:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 712:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 18931              		.loc 1 713 0
 18932 000a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 18933 000c 22EA0000 		bic	r0, r2, r0
 18934              	.LVL31:
 18935              	.L41:
 18936 0010 1870     		strb	r0, [r3, #0]
 18937 0012 7047     		bx	lr
 18938              	.L43:
 18939              		.align	2
 18940              	.L42:
 18941 0014 09100240 		.word	1073877001
 18942              		.cfi_endproc
 18943              	.LFE41:
 18945              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 18946              		.align	1
 18947              		.global	RCC_USBCLKConfig
 18948              		.thumb
 18949              		.thumb_func
 18951              	RCC_USBCLKConfig:
 18952              	.LFB42:
 714:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 715:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 716:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 717:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 719:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 727:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 728:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18953              		.loc 1 729 0
 18954              		.cfi_startproc
 18955              		@ args = 0, pretend = 0, frame = 0
 18956              		@ frame_needed = 0, uses_anonymous_args = 0
 18957              		@ link register save eliminated.
 18958              	.LVL32:
 730:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 732:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 733:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 18959              		.loc 1 733 0
 18960 0000 014B     		ldr	r3, .L45
 18961 0002 1860     		str	r0, [r3, #0]
 734:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18962              		.loc 1 734 0
 18963 0004 7047     		bx	lr
 18964              	.L46:
 18965 0006 00BF     		.align	2
 18966              	.L45:
 18967 0008 D8004242 		.word	1111621848
 18968              		.cfi_endproc
 18969              	.LFE42:
 18971              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 18972              		.align	1
 18973              		.global	RCC_ADCCLKConfig
 18974              		.thumb
 18975              		.thumb_func
 18977              	RCC_ADCCLKConfig:
 18978              	.LFB43:
 735:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 736:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 737:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 745:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 746:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 748:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 751:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 753:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 755:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 756:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 765:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 766:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 18979              		.loc 1 767 0
 18980              		.cfi_startproc
 18981              		@ args = 0, pretend = 0, frame = 0
 18982              		@ frame_needed = 0, uses_anonymous_args = 0
 18983              		@ link register save eliminated.
 18984              	.LVL33:
 768:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 769:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 771:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 18985              		.loc 1 771 0
 18986 0000 034B     		ldr	r3, .L48
 18987 0002 5A68     		ldr	r2, [r3, #4]
 18988              	.LVL34:
 772:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 18989              		.loc 1 773 0
 18990 0004 22F44042 		bic	r2, r2, #49152
 18991              	.LVL35:
 774:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 18992              		.loc 1 775 0
 18993 0008 40EA0202 		orr	r2, r0, r2
 18994              	.LVL36:
 776:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 18995              		.loc 1 777 0
 18996 000c 5A60     		str	r2, [r3, #4]
 778:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 18997              		.loc 1 778 0
 18998 000e 7047     		bx	lr
 18999              	.L49:
 19000              		.align	2
 19001              	.L48:
 19002 0010 00100240 		.word	1073876992
 19003              		.cfi_endproc
 19004              	.LFE43:
 19006              		.section	.text.RCC_LSEConfig,"ax",%progbits
 19007              		.align	1
 19008              		.global	RCC_LSEConfig
 19009              		.thumb
 19010              		.thumb_func
 19012              	RCC_LSEConfig:
 19013              	.LFB44:
 779:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 780:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 782:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 784:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 791:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 792:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 794:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 797:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 799:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 800:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 801:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 803:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 810:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 811:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 813:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 816:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 818:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 820:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 821:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 828:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 829:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19014              		.loc 1 830 0
 19015              		.cfi_startproc
 19016              		@ args = 0, pretend = 0, frame = 0
 19017              		@ frame_needed = 0, uses_anonymous_args = 0
 19018              		@ link register save eliminated.
 19019              	.LVL37:
 831:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 833:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 19020              		.loc 1 835 0
 19021 0000 064B     		ldr	r3, .L55
 19022 0002 0022     		movs	r2, #0
 836:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 838:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 19023              		.loc 1 839 0
 19024 0004 0128     		cmp	r0, #1
 835:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 19025              		.loc 1 835 0
 19026 0006 1A70     		strb	r2, [r3, #0]
 837:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 19027              		.loc 1 837 0
 19028 0008 1A70     		strb	r2, [r3, #0]
 19029              		.loc 1 839 0
 19030 000a 02D0     		beq	.L52
 19031 000c 0428     		cmp	r0, #4
 19032 000e 04D1     		bne	.L50
 19033 0010 01E0     		b	.L54
 19034              	.L52:
 840:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 841:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 19035              		.loc 1 843 0
 19036 0012 1870     		strb	r0, [r3, #0]
 844:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 19037              		.loc 1 844 0
 19038 0014 7047     		bx	lr
 19039              	.L54:
 845:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 846:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 19040              		.loc 1 848 0
 19041 0016 0522     		movs	r2, #5
 19042 0018 1A70     		strb	r2, [r3, #0]
 19043              	.L50:
 19044 001a 7047     		bx	lr
 19045              	.L56:
 19046              		.align	2
 19047              	.L55:
 19048 001c 20100240 		.word	1073877024
 19049              		.cfi_endproc
 19050              	.LFE44:
 19052              		.section	.text.RCC_LSICmd,"ax",%progbits
 19053              		.align	1
 19054              		.global	RCC_LSICmd
 19055              		.thumb
 19056              		.thumb_func
 19058              	RCC_LSICmd:
 19059              	.LFB45:
 849:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 850:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 851:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 852:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 853:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 854:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 855:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 856:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 857:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 861:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 862:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19060              		.loc 1 863 0
 19061              		.cfi_startproc
 19062              		@ args = 0, pretend = 0, frame = 0
 19063              		@ frame_needed = 0, uses_anonymous_args = 0
 19064              		@ link register save eliminated.
 19065              	.LVL38:
 864:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 19066              		.loc 1 866 0
 19067 0000 014B     		ldr	r3, .L58
 19068 0002 1860     		str	r0, [r3, #0]
 867:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19069              		.loc 1 867 0
 19070 0004 7047     		bx	lr
 19071              	.L59:
 19072 0006 00BF     		.align	2
 19073              	.L58:
 19074 0008 80044242 		.word	1111622784
 19075              		.cfi_endproc
 19076              	.LFE45:
 19078              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 19079              		.align	1
 19080              		.global	RCC_RTCCLKConfig
 19081              		.thumb
 19082              		.thumb_func
 19084              	RCC_RTCCLKConfig:
 19085              	.LFB46:
 868:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 869:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 870:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 878:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 879:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19086              		.loc 1 880 0
 19087              		.cfi_startproc
 19088              		@ args = 0, pretend = 0, frame = 0
 19089              		@ frame_needed = 0, uses_anonymous_args = 0
 19090              		@ link register save eliminated.
 19091              	.LVL39:
 881:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 883:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 19092              		.loc 1 884 0
 19093 0000 024B     		ldr	r3, .L61
 19094 0002 1A6A     		ldr	r2, [r3, #32]
 19095 0004 40EA0202 		orr	r2, r0, r2
 19096 0008 1A62     		str	r2, [r3, #32]
 885:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19097              		.loc 1 885 0
 19098 000a 7047     		bx	lr
 19099              	.L62:
 19100              		.align	2
 19101              	.L61:
 19102 000c 00100240 		.word	1073876992
 19103              		.cfi_endproc
 19104              	.LFE46:
 19106              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 19107              		.align	1
 19108              		.global	RCC_RTCCLKCmd
 19109              		.thumb
 19110              		.thumb_func
 19112              	RCC_RTCCLKCmd:
 19113              	.LFB47:
 886:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 887:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 888:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 892:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 893:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19114              		.loc 1 894 0
 19115              		.cfi_startproc
 19116              		@ args = 0, pretend = 0, frame = 0
 19117              		@ frame_needed = 0, uses_anonymous_args = 0
 19118              		@ link register save eliminated.
 19119              	.LVL40:
 895:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 897:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 19120              		.loc 1 897 0
 19121 0000 014B     		ldr	r3, .L64
 19122 0002 1860     		str	r0, [r3, #0]
 898:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19123              		.loc 1 898 0
 19124 0004 7047     		bx	lr
 19125              	.L65:
 19126 0006 00BF     		.align	2
 19127              	.L64:
 19128 0008 3C044242 		.word	1111622716
 19129              		.cfi_endproc
 19130              	.LFE47:
 19132              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 19133              		.align	1
 19134              		.global	RCC_GetClocksFreq
 19135              		.thumb
 19136              		.thumb_func
 19138              	RCC_GetClocksFreq:
 19139              	.LFB48:
 899:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 900:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 901:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 907:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 908:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19140              		.loc 1 909 0
 19141              		.cfi_startproc
 19142              		@ args = 0, pretend = 0, frame = 0
 19143              		@ frame_needed = 0, uses_anonymous_args = 0
 19144              	.LVL41:
 910:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 911:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 912:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 916:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 918:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 919:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 920:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 19145              		.loc 1 921 0
 19146 0000 204B     		ldr	r3, .L76
 909:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19147              		.loc 1 909 0
 19148 0002 10B5     		push	{r4, lr}
 19149              	.LCFI0:
 19150              		.cfi_def_cfa_offset 8
 19151              		.loc 1 921 0
 19152 0004 5A68     		ldr	r2, [r3, #4]
 19153              	.LVL42:
 19154 0006 02F00C02 		and	r2, r2, #12
 19155              	.LVL43:
 922:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 923:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 19156              		.loc 1 923 0
 19157 000a 042A     		cmp	r2, #4
 19158 000c 01D0     		beq	.L69
 19159              		.cfi_offset 14, -4
 19160              		.cfi_offset 4, -8
 19161 000e 082A     		cmp	r2, #8
 19162 0010 02D0     		beq	.L70
 19163              	.L69:
 924:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 925:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 927:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 928:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 19164              		.loc 1 929 0
 19165 0012 1D4B     		ldr	r3, .L76+4
 19166 0014 0360     		str	r3, [r0, #0]
 930:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 19167              		.loc 1 930 0
 19168 0016 11E0     		b	.L71
 19169              	.L70:
 931:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 933:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 19170              		.loc 1 934 0
 19171 0018 5A68     		ldr	r2, [r3, #4]
 19172              	.LVL44:
 935:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 19173              		.loc 1 935 0
 19174 001a 5968     		ldr	r1, [r3, #4]
 19175              	.LVL45:
 934:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 19176              		.loc 1 934 0
 19177 001c 02F47012 		and	r2, r2, #3932160
 19178              	.LVL46:
 936:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 937:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 19179              		.loc 1 938 0
 19180 0020 920C     		lsrs	r2, r2, #18
 19181              	.LVL47:
 19182 0022 0232     		adds	r2, r2, #2
 19183              	.LVL48:
 939:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 940:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 19184              		.loc 1 940 0
 19185 0024 11F4803F 		tst	r1, #65536
 19186 0028 03D0     		beq	.L75
 19187              	.L72:
 941:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 943:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 944:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 945:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 946:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 951:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 19188              		.loc 1 952 0
 19189 002a 5B68     		ldr	r3, [r3, #4]
 19190 002c 13F4003F 		tst	r3, #131072
 19191 0030 01D0     		beq	.L73
 19192              	.L75:
 953:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 19193              		.loc 1 954 0
 19194 0032 164B     		ldr	r3, .L76+8
 19195 0034 00E0     		b	.L74
 19196              	.L73:
 955:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 956:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 957:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 958:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 19197              		.loc 1 958 0
 19198 0036 144B     		ldr	r3, .L76+4
 19199              	.L74:
 19200 0038 5A43     		muls	r2, r3, r2
 19201              	.LVL49:
 19202 003a 0260     		str	r2, [r0, #0]
 19203              	.LVL50:
 19204              	.L71:
 959:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 960:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 961:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 962:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 963:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 965:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 967:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 969:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 970:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 973:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 974:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 978:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 979:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 981:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 985:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 989:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 990:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 992:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 997:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 998:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1000:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1001:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1002:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1003:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1004:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1005:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1006:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 19205              		.loc 1 1008 0
 19206 003c 114B     		ldr	r3, .L76
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 19207              		.loc 1 1010 0
 19208 003e 1449     		ldr	r1, .L76+12
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 19209              		.loc 1 1008 0
 19210 0040 5A68     		ldr	r2, [r3, #4]
1011:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 19211              		.loc 1 1012 0
 19212 0042 0468     		ldr	r4, [r0, #0]
1008:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 19213              		.loc 1 1008 0
 19214 0044 02F0F002 		and	r2, r2, #240
 19215              	.LVL51:
1009:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 19216              		.loc 1 1009 0
 19217 0048 1209     		lsrs	r2, r2, #4
 19218              	.LVL52:
1010:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 19219              		.loc 1 1010 0
 19220 004a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 19221              	.LVL53:
 19222              		.loc 1 1012 0
 19223 004c 34FA02F2 		lsrs	r2, r4, r2
 19224 0050 4260     		str	r2, [r0, #4]
1013:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 19225              		.loc 1 1014 0
 19226 0052 5C68     		ldr	r4, [r3, #4]
 19227 0054 04F4E064 		and	r4, r4, #1792
 19228              	.LVL54:
1015:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 19229              		.loc 1 1015 0
 19230 0058 240A     		lsrs	r4, r4, #8
 19231              	.LVL55:
1016:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 19232              		.loc 1 1016 0
 19233 005a 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 19234              	.LVL56:
1017:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 19235              		.loc 1 1018 0
 19236 005c 32FA04F4 		lsrs	r4, r2, r4
 19237 0060 8460     		str	r4, [r0, #8]
1019:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 19238              		.loc 1 1020 0
 19239 0062 5C68     		ldr	r4, [r3, #4]
 19240 0064 04F46054 		and	r4, r4, #14336
 19241              	.LVL57:
1021:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 19242              		.loc 1 1021 0
 19243 0068 E40A     		lsrs	r4, r4, #11
 19244              	.LVL58:
1022:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 19245              		.loc 1 1022 0
 19246 006a 095D     		ldrb	r1, [r1, r4]	@ zero_extendqisi2
1023:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 19247              		.loc 1 1024 0
 19248 006c CA40     		lsrs	r2, r2, r1
 19249 006e C260     		str	r2, [r0, #12]
1025:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 19250              		.loc 1 1026 0
 19251 0070 5B68     		ldr	r3, [r3, #4]
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
1028:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 19252              		.loc 1 1028 0
 19253 0072 0849     		ldr	r1, .L76+16
1026:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 19254              		.loc 1 1026 0
 19255 0074 03F44043 		and	r3, r3, #49152
 19256              	.LVL59:
1027:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 19257              		.loc 1 1027 0
 19258 0078 9B0B     		lsrs	r3, r3, #14
 19259              	.LVL60:
 19260              		.loc 1 1028 0
 19261 007a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 19262              	.LVL61:
1029:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 19263              		.loc 1 1030 0
 19264 007c B2FBF3F2 		udiv	r2, r2, r3
 19265 0080 0261     		str	r2, [r0, #16]
1031:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19266              		.loc 1 1031 0
 19267 0082 10BD     		pop	{r4, pc}
 19268              	.L77:
 19269              		.align	2
 19270              	.L76:
 19271 0084 00100240 		.word	1073876992
 19272 0088 00127A00 		.word	8000000
 19273 008c 00093D00 		.word	4000000
 19274 0090 00000000 		.word	.LANCHOR0
 19275 0094 00000000 		.word	.LANCHOR1
 19276              		.cfi_endproc
 19277              	.LFE48:
 19279              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 19280              		.align	1
 19281              		.global	RCC_AHBPeriphClockCmd
 19282              		.thumb
 19283              		.thumb_func
 19285              	RCC_AHBPeriphClockCmd:
 19286              	.LFB49:
1032:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1033:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1034:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1037:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1049:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1051:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1059:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1063:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1064:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19287              		.loc 1 1065 0
 19288              		.cfi_startproc
 19289              		@ args = 0, pretend = 0, frame = 0
 19290              		@ frame_needed = 0, uses_anonymous_args = 0
 19291              		@ link register save eliminated.
 19292              	.LVL62:
 19293 0000 044B     		ldr	r3, .L82
1066:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1068:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1069:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1070:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 19294              		.loc 1 1070 0
 19295 0002 11B1     		cbz	r1, .L79
1071:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1072:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 19296              		.loc 1 1072 0
 19297 0004 5A69     		ldr	r2, [r3, #20]
 19298 0006 1043     		orrs	r0, r0, r2
 19299              	.LVL63:
 19300 0008 02E0     		b	.L81
 19301              	.LVL64:
 19302              	.L79:
1073:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1074:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1075:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1076:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 19303              		.loc 1 1076 0
 19304 000a 5A69     		ldr	r2, [r3, #20]
 19305 000c 22EA0000 		bic	r0, r2, r0
 19306              	.LVL65:
 19307              	.L81:
 19308 0010 5861     		str	r0, [r3, #20]
 19309 0012 7047     		bx	lr
 19310              	.L83:
 19311              		.align	2
 19312              	.L82:
 19313 0014 00100240 		.word	1073876992
 19314              		.cfi_endproc
 19315              	.LFE49:
 19317              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 19318              		.align	1
 19319              		.global	RCC_APB2PeriphClockCmd
 19320              		.thumb
 19321              		.thumb_func
 19323              	RCC_APB2PeriphClockCmd:
 19324              	.LFB50:
1077:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1078:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1079:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1080:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1081:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1094:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1095:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19325              		.loc 1 1096 0
 19326              		.cfi_startproc
 19327              		@ args = 0, pretend = 0, frame = 0
 19328              		@ frame_needed = 0, uses_anonymous_args = 0
 19329              		@ link register save eliminated.
 19330              	.LVL66:
 19331 0000 044B     		ldr	r3, .L88
1097:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1099:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 19332              		.loc 1 1100 0
 19333 0002 11B1     		cbz	r1, .L85
1101:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1102:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 19334              		.loc 1 1102 0
 19335 0004 9A69     		ldr	r2, [r3, #24]
 19336 0006 1043     		orrs	r0, r0, r2
 19337              	.LVL67:
 19338 0008 02E0     		b	.L87
 19339              	.LVL68:
 19340              	.L85:
1103:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1104:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1105:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1106:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 19341              		.loc 1 1106 0
 19342 000a 9A69     		ldr	r2, [r3, #24]
 19343 000c 22EA0000 		bic	r0, r2, r0
 19344              	.LVL69:
 19345              	.L87:
 19346 0010 9861     		str	r0, [r3, #24]
 19347 0012 7047     		bx	lr
 19348              	.L89:
 19349              		.align	2
 19350              	.L88:
 19351 0014 00100240 		.word	1073876992
 19352              		.cfi_endproc
 19353              	.LFE50:
 19355              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 19356              		.align	1
 19357              		.global	RCC_APB1PeriphClockCmd
 19358              		.thumb
 19359              		.thumb_func
 19361              	RCC_APB1PeriphClockCmd:
 19362              	.LFB51:
1107:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1108:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1109:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1110:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1111:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1125:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1126:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19363              		.loc 1 1127 0
 19364              		.cfi_startproc
 19365              		@ args = 0, pretend = 0, frame = 0
 19366              		@ frame_needed = 0, uses_anonymous_args = 0
 19367              		@ link register save eliminated.
 19368              	.LVL70:
 19369 0000 044B     		ldr	r3, .L94
1128:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1130:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 19370              		.loc 1 1131 0
 19371 0002 11B1     		cbz	r1, .L91
1132:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1133:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 19372              		.loc 1 1133 0
 19373 0004 DA69     		ldr	r2, [r3, #28]
 19374 0006 1043     		orrs	r0, r0, r2
 19375              	.LVL71:
 19376 0008 02E0     		b	.L93
 19377              	.LVL72:
 19378              	.L91:
1134:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1135:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1136:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1137:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 19379              		.loc 1 1137 0
 19380 000a DA69     		ldr	r2, [r3, #28]
 19381 000c 22EA0000 		bic	r0, r2, r0
 19382              	.LVL73:
 19383              	.L93:
 19384 0010 D861     		str	r0, [r3, #28]
 19385 0012 7047     		bx	lr
 19386              	.L95:
 19387              		.align	2
 19388              	.L94:
 19389 0014 00100240 		.word	1073876992
 19390              		.cfi_endproc
 19391              	.LFE51:
 19393              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 19394              		.align	1
 19395              		.global	RCC_APB2PeriphResetCmd
 19396              		.thumb
 19397              		.thumb_func
 19399              	RCC_APB2PeriphResetCmd:
 19400              	.LFB52:
1138:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1139:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1140:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1141:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1143:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1152:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1153:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1155:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1159:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1161:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1163:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1164:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1165:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1167:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1168:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1170:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1171:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1184:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1185:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19401              		.loc 1 1186 0
 19402              		.cfi_startproc
 19403              		@ args = 0, pretend = 0, frame = 0
 19404              		@ frame_needed = 0, uses_anonymous_args = 0
 19405              		@ link register save eliminated.
 19406              	.LVL74:
 19407 0000 044B     		ldr	r3, .L100
1187:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1189:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1190:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 19408              		.loc 1 1190 0
 19409 0002 11B1     		cbz	r1, .L97
1191:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1192:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 19410              		.loc 1 1192 0
 19411 0004 DA68     		ldr	r2, [r3, #12]
 19412 0006 1043     		orrs	r0, r0, r2
 19413              	.LVL75:
 19414 0008 02E0     		b	.L99
 19415              	.LVL76:
 19416              	.L97:
1193:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1194:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1195:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1196:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 19417              		.loc 1 1196 0
 19418 000a DA68     		ldr	r2, [r3, #12]
 19419 000c 22EA0000 		bic	r0, r2, r0
 19420              	.LVL77:
 19421              	.L99:
 19422 0010 D860     		str	r0, [r3, #12]
 19423 0012 7047     		bx	lr
 19424              	.L101:
 19425              		.align	2
 19426              	.L100:
 19427 0014 00100240 		.word	1073876992
 19428              		.cfi_endproc
 19429              	.LFE52:
 19431              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 19432              		.align	1
 19433              		.global	RCC_APB1PeriphResetCmd
 19434              		.thumb
 19435              		.thumb_func
 19437              	RCC_APB1PeriphResetCmd:
 19438              	.LFB53:
1197:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1198:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1199:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1200:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1201:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1215:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1216:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19439              		.loc 1 1217 0
 19440              		.cfi_startproc
 19441              		@ args = 0, pretend = 0, frame = 0
 19442              		@ frame_needed = 0, uses_anonymous_args = 0
 19443              		@ link register save eliminated.
 19444              	.LVL78:
 19445 0000 044B     		ldr	r3, .L106
1218:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1220:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1221:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 19446              		.loc 1 1221 0
 19447 0002 11B1     		cbz	r1, .L103
1222:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1223:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 19448              		.loc 1 1223 0
 19449 0004 1A69     		ldr	r2, [r3, #16]
 19450 0006 1043     		orrs	r0, r0, r2
 19451              	.LVL79:
 19452 0008 02E0     		b	.L105
 19453              	.LVL80:
 19454              	.L103:
1224:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1225:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1226:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1227:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 19455              		.loc 1 1227 0
 19456 000a 1A69     		ldr	r2, [r3, #16]
 19457 000c 22EA0000 		bic	r0, r2, r0
 19458              	.LVL81:
 19459              	.L105:
 19460 0010 1861     		str	r0, [r3, #16]
 19461 0012 7047     		bx	lr
 19462              	.L107:
 19463              		.align	2
 19464              	.L106:
 19465 0014 00100240 		.word	1073876992
 19466              		.cfi_endproc
 19467              	.LFE53:
 19469              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 19470              		.align	1
 19471              		.global	RCC_BackupResetCmd
 19472              		.thumb
 19473              		.thumb_func
 19475              	RCC_BackupResetCmd:
 19476              	.LFB54:
1228:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1229:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1230:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1231:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1232:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1236:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1237:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19477              		.loc 1 1238 0
 19478              		.cfi_startproc
 19479              		@ args = 0, pretend = 0, frame = 0
 19480              		@ frame_needed = 0, uses_anonymous_args = 0
 19481              		@ link register save eliminated.
 19482              	.LVL82:
1239:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1241:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 19483              		.loc 1 1241 0
 19484 0000 014B     		ldr	r3, .L109
 19485 0002 1860     		str	r0, [r3, #0]
1242:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19486              		.loc 1 1242 0
 19487 0004 7047     		bx	lr
 19488              	.L110:
 19489 0006 00BF     		.align	2
 19490              	.L109:
 19491 0008 40044242 		.word	1111622720
 19492              		.cfi_endproc
 19493              	.LFE54:
 19495              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 19496              		.align	1
 19497              		.global	RCC_ClockSecuritySystemCmd
 19498              		.thumb
 19499              		.thumb_func
 19501              	RCC_ClockSecuritySystemCmd:
 19502              	.LFB55:
1243:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1244:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1245:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1249:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1250:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19503              		.loc 1 1251 0
 19504              		.cfi_startproc
 19505              		@ args = 0, pretend = 0, frame = 0
 19506              		@ frame_needed = 0, uses_anonymous_args = 0
 19507              		@ link register save eliminated.
 19508              	.LVL83:
1252:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1254:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 19509              		.loc 1 1254 0
 19510 0000 014B     		ldr	r3, .L112
 19511 0002 1860     		str	r0, [r3, #0]
1255:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19512              		.loc 1 1255 0
 19513 0004 7047     		bx	lr
 19514              	.L113:
 19515 0006 00BF     		.align	2
 19516              	.L112:
 19517 0008 4C004242 		.word	1111621708
 19518              		.cfi_endproc
 19519              	.LFE55:
 19521              		.section	.text.RCC_MCOConfig,"ax",%progbits
 19522              		.align	1
 19523              		.global	RCC_MCOConfig
 19524              		.thumb
 19525              		.thumb_func
 19527              	RCC_MCOConfig:
 19528              	.LFB56:
1256:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1257:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1258:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1261:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1263:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1273:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1280:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1281:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1282:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19529              		.loc 1 1283 0
 19530              		.cfi_startproc
 19531              		@ args = 0, pretend = 0, frame = 0
 19532              		@ frame_needed = 0, uses_anonymous_args = 0
 19533              		@ link register save eliminated.
 19534              	.LVL84:
1284:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1286:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1287:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 19535              		.loc 1 1288 0
 19536 0000 014B     		ldr	r3, .L115
 19537 0002 1870     		strb	r0, [r3, #0]
1289:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19538              		.loc 1 1289 0
 19539 0004 7047     		bx	lr
 19540              	.L116:
 19541 0006 00BF     		.align	2
 19542              	.L115:
 19543 0008 07100240 		.word	1073876999
 19544              		.cfi_endproc
 19545              	.LFE56:
 19547              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 19548              		.align	1
 19549              		.global	RCC_GetFlagStatus
 19550              		.thumb
 19551              		.thumb_func
 19553              	RCC_GetFlagStatus:
 19554              	.LFB57:
1290:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1291:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1292:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1295:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1297:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1311:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1324:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19555              		.loc 1 1327 0
 19556              		.cfi_startproc
 19557              		@ args = 0, pretend = 0, frame = 0
 19558              		@ frame_needed = 0, uses_anonymous_args = 0
 19559              		@ link register save eliminated.
 19560              	.LVL85:
1328:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1329:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1330:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1331:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1333:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1334:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 19561              		.loc 1 1335 0
 19562 0000 4309     		lsrs	r3, r0, #5
 19563              	.LVL86:
1336:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 19564              		.loc 1 1336 0
 19565 0002 012B     		cmp	r3, #1
 19566 0004 074A     		ldr	r2, .L121
 19567 0006 01D1     		bne	.L118
1337:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1338:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 19568              		.loc 1 1338 0
 19569 0008 1368     		ldr	r3, [r2, #0]
 19570              	.LVL87:
 19571 000a 03E0     		b	.L119
 19572              	.LVL88:
 19573              	.L118:
1339:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1340:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
 19574              		.loc 1 1340 0
 19575 000c 022B     		cmp	r3, #2
1341:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1342:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
 19576              		.loc 1 1342 0
 19577 000e 0CBF     		ite	eq
 19578 0010 136A     		ldreq	r3, [r2, #32]
 19579              	.LVL89:
1343:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1344:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1346:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
 19580              		.loc 1 1346 0
 19581 0012 536A     		ldrne	r3, [r2, #36]
 19582              	.LVL90:
 19583              	.L119:
1347:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1348:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1349:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 19584              		.loc 1 1350 0
 19585 0014 00F01F00 		and	r0, r0, #31
 19586              	.LVL91:
1351:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 19587              		.loc 1 1351 0
 19588 0018 33FA00F0 		lsrs	r0, r3, r0
1352:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1353:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1354:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1355:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1356:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1357:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1358:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1359:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1360:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
1362:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19589              		.loc 1 1362 0
 19590 001c 00F00100 		and	r0, r0, #1
 19591 0020 7047     		bx	lr
 19592              	.L122:
 19593 0022 00BF     		.align	2
 19594              	.L121:
 19595 0024 00100240 		.word	1073876992
 19596              		.cfi_endproc
 19597              	.LFE57:
 19599              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 19600              		.align	1
 19601              		.global	RCC_WaitForHSEStartUp
 19602              		.thumb
 19603              		.thumb_func
 19605              	RCC_WaitForHSEStartUp:
 19606              	.LFB31:
 305:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19607              		.loc 1 305 0
 19608              		.cfi_startproc
 19609              		@ args = 0, pretend = 0, frame = 8
 19610              		@ frame_needed = 0, uses_anonymous_args = 0
 19611 0000 07B5     		push	{r0, r1, r2, lr}
 19612              	.LCFI1:
 19613              		.cfi_def_cfa_offset 16
 306:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 19614              		.loc 1 306 0
 19615 0002 0023     		movs	r3, #0
 19616 0004 0193     		str	r3, [sp, #4]
 19617              	.LVL92:
 19618              	.L125:
 313:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 19619              		.loc 1 313 0 discriminator 1
 19620 0006 3120     		movs	r0, #49
 19621              		.cfi_offset 14, -4
 19622              		.cfi_offset 2, -8
 19623              		.cfi_offset 1, -12
 19624              		.cfi_offset 0, -16
 19625 0008 FFF7FEFF 		bl	RCC_GetFlagStatus
 19626              	.LVL93:
 314:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 19627              		.loc 1 314 0 discriminator 1
 19628 000c 019B     		ldr	r3, [sp, #4]
 19629 000e 0133     		adds	r3, r3, #1
 19630              	.LVL94:
 19631 0010 0193     		str	r3, [sp, #4]
 19632              	.LVL95:
 315:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 19633              		.loc 1 315 0 discriminator 1
 19634 0012 019B     		ldr	r3, [sp, #4]
 19635              	.LVL96:
 19636 0014 B3F5A06F 		cmp	r3, #1280
 19637 0018 01D0     		beq	.L124
 19638 001a 0028     		cmp	r0, #0
 19639 001c F3D0     		beq	.L125
 19640              	.L124:
 317:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 19641              		.loc 1 317 0
 19642 001e 3120     		movs	r0, #49
 19643              	.LVL97:
 19644 0020 FFF7FEFF 		bl	RCC_GetFlagStatus
 19645              	.LVL98:
 326:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19646              		.loc 1 326 0
 19647 0024 0038     		subs	r0, r0, #0
 19648              	.LVL99:
 19649 0026 18BF     		it	ne
 19650 0028 0120     		movne	r0, #1
 19651 002a 0EBD     		pop	{r1, r2, r3, pc}
 19652              		.cfi_endproc
 19653              	.LFE31:
 19655              		.section	.text.RCC_ClearFlag,"ax",%progbits
 19656              		.align	1
 19657              		.global	RCC_ClearFlag
 19658              		.thumb
 19659              		.thumb_func
 19661              	RCC_ClearFlag:
 19662              	.LFB58:
1363:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1364:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1365:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1369:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1370:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1371:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19663              		.loc 1 1372 0
 19664              		.cfi_startproc
 19665              		@ args = 0, pretend = 0, frame = 0
 19666              		@ frame_needed = 0, uses_anonymous_args = 0
 19667              		@ link register save eliminated.
1373:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 19668              		.loc 1 1374 0
 19669 0000 024B     		ldr	r3, .L127
 19670 0002 5A6A     		ldr	r2, [r3, #36]
 19671 0004 42F08072 		orr	r2, r2, #16777216
 19672 0008 5A62     		str	r2, [r3, #36]
1375:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19673              		.loc 1 1375 0
 19674 000a 7047     		bx	lr
 19675              	.L128:
 19676              		.align	2
 19677              	.L127:
 19678 000c 00100240 		.word	1073876992
 19679              		.cfi_endproc
 19680              	.LFE58:
 19682              		.section	.text.RCC_GetITStatus,"ax",%progbits
 19683              		.align	1
 19684              		.global	RCC_GetITStatus
 19685              		.thumb
 19686              		.thumb_func
 19688              	RCC_GetITStatus:
 19689              	.LFB59:
1376:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1377:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1378:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1381:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1383:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1392:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1400:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1402:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19690              		.loc 1 1403 0
 19691              		.cfi_startproc
 19692              		@ args = 0, pretend = 0, frame = 0
 19693              		@ frame_needed = 0, uses_anonymous_args = 0
 19694              		@ link register save eliminated.
 19695              	.LVL100:
1404:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1405:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1407:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1408:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 19696              		.loc 1 1409 0
 19697 0000 034B     		ldr	r3, .L130
 19698 0002 9B68     		ldr	r3, [r3, #8]
 19699              	.LVL101:
1410:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1411:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
 19700              		.loc 1 1411 0
 19701 0004 1842     		tst	r0, r3
1412:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1413:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1414:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1415:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1416:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1417:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1418:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
1420:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19702              		.loc 1 1420 0
 19703 0006 0CBF     		ite	eq
 19704 0008 0020     		moveq	r0, #0
 19705 000a 0120     		movne	r0, #1
 19706              	.LVL102:
 19707 000c 7047     		bx	lr
 19708              	.L131:
 19709 000e 00BF     		.align	2
 19710              	.L130:
 19711 0010 00100240 		.word	1073876992
 19712              		.cfi_endproc
 19713              	.LFE59:
 19715              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 19716              		.align	1
 19717              		.global	RCC_ClearITPendingBit
 19718              		.thumb
 19719              		.thumb_func
 19721              	RCC_ClearITPendingBit:
 19722              	.LFB60:
1421:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1422:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1423:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1426:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1437:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1439:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1445:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1447:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1448:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 19723              		.loc 1 1449 0
 19724              		.cfi_startproc
 19725              		@ args = 0, pretend = 0, frame = 0
 19726              		@ frame_needed = 0, uses_anonymous_args = 0
 19727              		@ link register save eliminated.
 19728              	.LVL103:
1450:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1452:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1453:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1455:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 19729              		.loc 1 1455 0
 19730 0000 014B     		ldr	r3, .L133
 19731 0002 1870     		strb	r0, [r3, #0]
1456:../Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 19732              		.loc 1 1456 0
 19733 0004 7047     		bx	lr
 19734              	.L134:
 19735 0006 00BF     		.align	2
 19736              	.L133:
 19737 0008 0A100240 		.word	1073877002
 19738              		.cfi_endproc
 19739              	.LFE60:
 19741              		.section	.data.ADCPrescTable,"aw",%progbits
 19742              		.set	.LANCHOR1,. + 0
 19745              	ADCPrescTable:
 19746 0000 02       		.byte	2
 19747 0001 04       		.byte	4
 19748 0002 06       		.byte	6
 19749 0003 08       		.byte	8
 19750              		.section	.data.APBAHBPrescTable,"aw",%progbits
 19751              		.set	.LANCHOR0,. + 0
 19754              	APBAHBPrescTable:
 19755 0000 00       		.byte	0
 19756 0001 00       		.byte	0
 19757 0002 00       		.byte	0
 19758 0003 00       		.byte	0
 19759 0004 01       		.byte	1
 19760 0005 02       		.byte	2
 19761 0006 03       		.byte	3
 19762 0007 04       		.byte	4
 19763 0008 01       		.byte	1
 19764 0009 02       		.byte	2
 19765 000a 03       		.byte	3
 19766 000b 04       		.byte	4
 19767 000c 06       		.byte	6
 19768 000d 07       		.byte	7
 19769 000e 08       		.byte	8
 19770 000f 09       		.byte	9
 19771              		.text
 19772              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_rcc.c
     /tmp/ccRbreBe.s:18517  .text.RCC_DeInit:00000000 $t
     /tmp/ccRbreBe.s:18522  .text.RCC_DeInit:00000000 RCC_DeInit
     /tmp/ccRbreBe.s:18560  .text.RCC_DeInit:00000038 $d
     /tmp/ccRbreBe.s:18566  .text.RCC_HSEConfig:00000000 $t
     /tmp/ccRbreBe.s:18571  .text.RCC_HSEConfig:00000000 RCC_HSEConfig
     /tmp/ccRbreBe.s:18613  .text.RCC_HSEConfig:00000034 $d
     /tmp/ccRbreBe.s:18618  .text.RCC_AdjustHSICalibrationValue:00000000 $t
     /tmp/ccRbreBe.s:18623  .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
     /tmp/ccRbreBe.s:18648  .text.RCC_AdjustHSICalibrationValue:00000010 $d
     /tmp/ccRbreBe.s:18653  .text.RCC_HSICmd:00000000 $t
     /tmp/ccRbreBe.s:18658  .text.RCC_HSICmd:00000000 RCC_HSICmd
     /tmp/ccRbreBe.s:18674  .text.RCC_HSICmd:00000008 $d
     /tmp/ccRbreBe.s:18679  .text.RCC_PLLConfig:00000000 $t
     /tmp/ccRbreBe.s:18684  .text.RCC_PLLConfig:00000000 RCC_PLLConfig
     /tmp/ccRbreBe.s:18711  .text.RCC_PLLConfig:00000014 $d
     /tmp/ccRbreBe.s:18716  .text.RCC_PLLCmd:00000000 $t
     /tmp/ccRbreBe.s:18721  .text.RCC_PLLCmd:00000000 RCC_PLLCmd
     /tmp/ccRbreBe.s:18737  .text.RCC_PLLCmd:00000008 $d
     /tmp/ccRbreBe.s:18742  .text.RCC_SYSCLKConfig:00000000 $t
     /tmp/ccRbreBe.s:18747  .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
     /tmp/ccRbreBe.s:18772  .text.RCC_SYSCLKConfig:00000010 $d
     /tmp/ccRbreBe.s:18777  .text.RCC_GetSYSCLKSource:00000000 $t
     /tmp/ccRbreBe.s:18782  .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
     /tmp/ccRbreBe.s:18798  .text.RCC_GetSYSCLKSource:0000000c $d
     /tmp/ccRbreBe.s:18803  .text.RCC_HCLKConfig:00000000 $t
     /tmp/ccRbreBe.s:18808  .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
     /tmp/ccRbreBe.s:18833  .text.RCC_HCLKConfig:00000010 $d
     /tmp/ccRbreBe.s:18838  .text.RCC_PCLK1Config:00000000 $t
     /tmp/ccRbreBe.s:18843  .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
     /tmp/ccRbreBe.s:18868  .text.RCC_PCLK1Config:00000010 $d
     /tmp/ccRbreBe.s:18873  .text.RCC_PCLK2Config:00000000 $t
     /tmp/ccRbreBe.s:18878  .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
     /tmp/ccRbreBe.s:18903  .text.RCC_PCLK2Config:00000010 $d
     /tmp/ccRbreBe.s:18908  .text.RCC_ITConfig:00000000 $t
     /tmp/ccRbreBe.s:18913  .text.RCC_ITConfig:00000000 RCC_ITConfig
     /tmp/ccRbreBe.s:18941  .text.RCC_ITConfig:00000014 $d
     /tmp/ccRbreBe.s:18946  .text.RCC_USBCLKConfig:00000000 $t
     /tmp/ccRbreBe.s:18951  .text.RCC_USBCLKConfig:00000000 RCC_USBCLKConfig
     /tmp/ccRbreBe.s:18967  .text.RCC_USBCLKConfig:00000008 $d
     /tmp/ccRbreBe.s:18972  .text.RCC_ADCCLKConfig:00000000 $t
     /tmp/ccRbreBe.s:18977  .text.RCC_ADCCLKConfig:00000000 RCC_ADCCLKConfig
     /tmp/ccRbreBe.s:19002  .text.RCC_ADCCLKConfig:00000010 $d
     /tmp/ccRbreBe.s:19007  .text.RCC_LSEConfig:00000000 $t
     /tmp/ccRbreBe.s:19012  .text.RCC_LSEConfig:00000000 RCC_LSEConfig
     /tmp/ccRbreBe.s:19048  .text.RCC_LSEConfig:0000001c $d
     /tmp/ccRbreBe.s:19053  .text.RCC_LSICmd:00000000 $t
     /tmp/ccRbreBe.s:19058  .text.RCC_LSICmd:00000000 RCC_LSICmd
     /tmp/ccRbreBe.s:19074  .text.RCC_LSICmd:00000008 $d
     /tmp/ccRbreBe.s:19079  .text.RCC_RTCCLKConfig:00000000 $t
     /tmp/ccRbreBe.s:19084  .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
     /tmp/ccRbreBe.s:19102  .text.RCC_RTCCLKConfig:0000000c $d
     /tmp/ccRbreBe.s:19107  .text.RCC_RTCCLKCmd:00000000 $t
     /tmp/ccRbreBe.s:19112  .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
     /tmp/ccRbreBe.s:19128  .text.RCC_RTCCLKCmd:00000008 $d
     /tmp/ccRbreBe.s:19133  .text.RCC_GetClocksFreq:00000000 $t
     /tmp/ccRbreBe.s:19138  .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
     /tmp/ccRbreBe.s:19271  .text.RCC_GetClocksFreq:00000084 $d
     /tmp/ccRbreBe.s:19280  .text.RCC_AHBPeriphClockCmd:00000000 $t
     /tmp/ccRbreBe.s:19285  .text.RCC_AHBPeriphClockCmd:00000000 RCC_AHBPeriphClockCmd
     /tmp/ccRbreBe.s:19313  .text.RCC_AHBPeriphClockCmd:00000014 $d
     /tmp/ccRbreBe.s:19318  .text.RCC_APB2PeriphClockCmd:00000000 $t
     /tmp/ccRbreBe.s:19323  .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
     /tmp/ccRbreBe.s:19351  .text.RCC_APB2PeriphClockCmd:00000014 $d
     /tmp/ccRbreBe.s:19356  .text.RCC_APB1PeriphClockCmd:00000000 $t
     /tmp/ccRbreBe.s:19361  .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
     /tmp/ccRbreBe.s:19389  .text.RCC_APB1PeriphClockCmd:00000014 $d
     /tmp/ccRbreBe.s:19394  .text.RCC_APB2PeriphResetCmd:00000000 $t
     /tmp/ccRbreBe.s:19399  .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
     /tmp/ccRbreBe.s:19427  .text.RCC_APB2PeriphResetCmd:00000014 $d
     /tmp/ccRbreBe.s:19432  .text.RCC_APB1PeriphResetCmd:00000000 $t
     /tmp/ccRbreBe.s:19437  .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
     /tmp/ccRbreBe.s:19465  .text.RCC_APB1PeriphResetCmd:00000014 $d
     /tmp/ccRbreBe.s:19470  .text.RCC_BackupResetCmd:00000000 $t
     /tmp/ccRbreBe.s:19475  .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
     /tmp/ccRbreBe.s:19491  .text.RCC_BackupResetCmd:00000008 $d
     /tmp/ccRbreBe.s:19496  .text.RCC_ClockSecuritySystemCmd:00000000 $t
     /tmp/ccRbreBe.s:19501  .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
     /tmp/ccRbreBe.s:19517  .text.RCC_ClockSecuritySystemCmd:00000008 $d
     /tmp/ccRbreBe.s:19522  .text.RCC_MCOConfig:00000000 $t
     /tmp/ccRbreBe.s:19527  .text.RCC_MCOConfig:00000000 RCC_MCOConfig
     /tmp/ccRbreBe.s:19543  .text.RCC_MCOConfig:00000008 $d
     /tmp/ccRbreBe.s:19548  .text.RCC_GetFlagStatus:00000000 $t
     /tmp/ccRbreBe.s:19553  .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
     /tmp/ccRbreBe.s:19595  .text.RCC_GetFlagStatus:00000024 $d
     /tmp/ccRbreBe.s:19600  .text.RCC_WaitForHSEStartUp:00000000 $t
     /tmp/ccRbreBe.s:19605  .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
     /tmp/ccRbreBe.s:19656  .text.RCC_ClearFlag:00000000 $t
     /tmp/ccRbreBe.s:19661  .text.RCC_ClearFlag:00000000 RCC_ClearFlag
     /tmp/ccRbreBe.s:19678  .text.RCC_ClearFlag:0000000c $d
     /tmp/ccRbreBe.s:19683  .text.RCC_GetITStatus:00000000 $t
     /tmp/ccRbreBe.s:19688  .text.RCC_GetITStatus:00000000 RCC_GetITStatus
     /tmp/ccRbreBe.s:19711  .text.RCC_GetITStatus:00000010 $d
     /tmp/ccRbreBe.s:19716  .text.RCC_ClearITPendingBit:00000000 $t
     /tmp/ccRbreBe.s:19721  .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
     /tmp/ccRbreBe.s:19737  .text.RCC_ClearITPendingBit:00000008 $d
     /tmp/ccRbreBe.s:19745  .data.ADCPrescTable:00000000 ADCPrescTable
     /tmp/ccRbreBe.s:19754  .data.APBAHBPrescTable:00000000 APBAHBPrescTable
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
